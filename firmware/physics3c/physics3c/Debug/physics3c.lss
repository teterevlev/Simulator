
physics3c.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000014  00800100  00000ec2  00000f56  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000ec2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000016  00800114  00800114  00000f6a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000f6a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000f9c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000e0  00000000  00000000  00000fdc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000d4c  00000000  00000000  000010bc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000899  00000000  00000000  00001e08  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000007bf  00000000  00000000  000026a1  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002b0  00000000  00000000  00002e60  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000622  00000000  00000000  00003110  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000004f4  00000000  00000000  00003732  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c0  00000000  00000000  00003c26  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 d6 04 	jmp	0x9ac	; 0x9ac <__vector_7>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 cc 04 	jmp	0x998	; 0x998 <__vector_11>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 a1 04 	jmp	0x942	; 0x942 <__vector_14>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e2 ec       	ldi	r30, 0xC2	; 194
  7c:	fe e0       	ldi	r31, 0x0E	; 14
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a4 31       	cpi	r26, 0x14	; 20
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a4 e1       	ldi	r26, 0x14	; 20
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	aa 32       	cpi	r26, 0x2A	; 42
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 f7 03 	call	0x7ee	; 0x7ee <main>
  9e:	0c 94 5f 07 	jmp	0xebe	; 0xebe <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <_Z9uart_initv>:
	loop_until_bit_is_set(UCSR0A, UDRE0); /* Wait until data register empty. */
	UDR0 = c;
}
void uart_putcharln(uint8_t c){
	uart_putchar(c);
	uart_putchar('\n');
  a6:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
  aa:	80 e1       	ldi	r24, 0x10	; 16
  ac:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
  b0:	e0 ec       	ldi	r30, 0xC0	; 192
  b2:	f0 e0       	ldi	r31, 0x00	; 0
  b4:	80 81       	ld	r24, Z
  b6:	82 60       	ori	r24, 0x02	; 2
  b8:	80 83       	st	Z, r24
  ba:	86 e0       	ldi	r24, 0x06	; 6
  bc:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
  c0:	88 e1       	ldi	r24, 0x18	; 24
  c2:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
  c6:	08 95       	ret

000000c8 <_Z12uart_putcharh>:
  c8:	e0 ec       	ldi	r30, 0xC0	; 192
  ca:	f0 e0       	ldi	r31, 0x00	; 0
  cc:	90 81       	ld	r25, Z
  ce:	95 ff       	sbrs	r25, 5
  d0:	fd cf       	rjmp	.-6      	; 0xcc <_Z12uart_putcharh+0x4>
  d2:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
  d6:	08 95       	ret

000000d8 <_Z14uart_availablev>:
}
bool uart_available(){
	if ( !(UCSR0A & (1<<RXC0)) ) return false;
  d8:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
	return true;
}
  dc:	88 1f       	adc	r24, r24
  de:	88 27       	eor	r24, r24
  e0:	88 1f       	adc	r24, r24
  e2:	08 95       	ret

000000e4 <_Z12uart_getcharv>:
uint8_t uart_getchar(){
	return UDR0;
  e4:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
}
  e8:	08 95       	ret

000000ea <_Z8uart_decl>:
void uart_dec(int32_t d){
  ea:	8f 92       	push	r8
  ec:	9f 92       	push	r9
  ee:	af 92       	push	r10
  f0:	bf 92       	push	r11
  f2:	cf 92       	push	r12
  f4:	df 92       	push	r13
  f6:	ef 92       	push	r14
  f8:	ff 92       	push	r15
  fa:	6b 01       	movw	r12, r22
  fc:	7c 01       	movw	r14, r24
	if(d<0){
  fe:	99 23       	and	r25, r25
 100:	5c f4       	brge	.+22     	; 0x118 <_Z8uart_decl+0x2e>
		uart_putchar('-');
 102:	8d e2       	ldi	r24, 0x2D	; 45
 104:	0e 94 64 00 	call	0xc8	; 0xc8 <_Z12uart_putcharh>
		d = -d;
 108:	f0 94       	com	r15
 10a:	e0 94       	com	r14
 10c:	d0 94       	com	r13
 10e:	c0 94       	com	r12
 110:	c1 1c       	adc	r12, r1
 112:	d1 1c       	adc	r13, r1
 114:	e1 1c       	adc	r14, r1
 116:	f1 1c       	adc	r15, r1
	}
	if(d>=100000) uart_putchar((d/100000)+48);
 118:	80 ea       	ldi	r24, 0xA0	; 160
 11a:	c8 16       	cp	r12, r24
 11c:	86 e8       	ldi	r24, 0x86	; 134
 11e:	d8 06       	cpc	r13, r24
 120:	81 e0       	ldi	r24, 0x01	; 1
 122:	e8 06       	cpc	r14, r24
 124:	f1 04       	cpc	r15, r1
 126:	64 f0       	brlt	.+24     	; 0x140 <_Z8uart_decl+0x56>
 128:	c7 01       	movw	r24, r14
 12a:	b6 01       	movw	r22, r12
 12c:	20 ea       	ldi	r18, 0xA0	; 160
 12e:	36 e8       	ldi	r19, 0x86	; 134
 130:	41 e0       	ldi	r20, 0x01	; 1
 132:	50 e0       	ldi	r21, 0x00	; 0
 134:	0e 94 1e 07 	call	0xe3c	; 0xe3c <__divmodsi4>
 138:	80 e3       	ldi	r24, 0x30	; 48
 13a:	82 0f       	add	r24, r18
 13c:	0e 94 64 00 	call	0xc8	; 0xc8 <_Z12uart_putcharh>
	if(d>=10000) uart_putchar(((d/10000)%10)+48);
 140:	80 e1       	ldi	r24, 0x10	; 16
 142:	c8 16       	cp	r12, r24
 144:	87 e2       	ldi	r24, 0x27	; 39
 146:	d8 06       	cpc	r13, r24
 148:	e1 04       	cpc	r14, r1
 14a:	f1 04       	cpc	r15, r1
 14c:	a4 f0       	brlt	.+40     	; 0x176 <_Z8uart_decl+0x8c>
 14e:	c7 01       	movw	r24, r14
 150:	b6 01       	movw	r22, r12
 152:	20 e1       	ldi	r18, 0x10	; 16
 154:	37 e2       	ldi	r19, 0x27	; 39
 156:	40 e0       	ldi	r20, 0x00	; 0
 158:	50 e0       	ldi	r21, 0x00	; 0
 15a:	0e 94 1e 07 	call	0xe3c	; 0xe3c <__divmodsi4>
 15e:	ca 01       	movw	r24, r20
 160:	b9 01       	movw	r22, r18
 162:	2a e0       	ldi	r18, 0x0A	; 10
 164:	30 e0       	ldi	r19, 0x00	; 0
 166:	40 e0       	ldi	r20, 0x00	; 0
 168:	50 e0       	ldi	r21, 0x00	; 0
 16a:	0e 94 1e 07 	call	0xe3c	; 0xe3c <__divmodsi4>
 16e:	80 e3       	ldi	r24, 0x30	; 48
 170:	86 0f       	add	r24, r22
 172:	0e 94 64 00 	call	0xc8	; 0xc8 <_Z12uart_putcharh>
	if(d>=1000) uart_putchar(((d/1000)%10)+48);
 176:	88 ee       	ldi	r24, 0xE8	; 232
 178:	c8 16       	cp	r12, r24
 17a:	83 e0       	ldi	r24, 0x03	; 3
 17c:	d8 06       	cpc	r13, r24
 17e:	e1 04       	cpc	r14, r1
 180:	f1 04       	cpc	r15, r1
 182:	a4 f0       	brlt	.+40     	; 0x1ac <_Z8uart_decl+0xc2>
 184:	c7 01       	movw	r24, r14
 186:	b6 01       	movw	r22, r12
 188:	28 ee       	ldi	r18, 0xE8	; 232
 18a:	33 e0       	ldi	r19, 0x03	; 3
 18c:	40 e0       	ldi	r20, 0x00	; 0
 18e:	50 e0       	ldi	r21, 0x00	; 0
 190:	0e 94 1e 07 	call	0xe3c	; 0xe3c <__divmodsi4>
 194:	ca 01       	movw	r24, r20
 196:	b9 01       	movw	r22, r18
 198:	2a e0       	ldi	r18, 0x0A	; 10
 19a:	30 e0       	ldi	r19, 0x00	; 0
 19c:	40 e0       	ldi	r20, 0x00	; 0
 19e:	50 e0       	ldi	r21, 0x00	; 0
 1a0:	0e 94 1e 07 	call	0xe3c	; 0xe3c <__divmodsi4>
 1a4:	80 e3       	ldi	r24, 0x30	; 48
 1a6:	86 0f       	add	r24, r22
 1a8:	0e 94 64 00 	call	0xc8	; 0xc8 <_Z12uart_putcharh>
	if(d>=100) uart_putchar(((d/100)%10)+48);
 1ac:	84 e6       	ldi	r24, 0x64	; 100
 1ae:	c8 16       	cp	r12, r24
 1b0:	d1 04       	cpc	r13, r1
 1b2:	e1 04       	cpc	r14, r1
 1b4:	f1 04       	cpc	r15, r1
 1b6:	a4 f0       	brlt	.+40     	; 0x1e0 <_Z8uart_decl+0xf6>
 1b8:	c7 01       	movw	r24, r14
 1ba:	b6 01       	movw	r22, r12
 1bc:	24 e6       	ldi	r18, 0x64	; 100
 1be:	30 e0       	ldi	r19, 0x00	; 0
 1c0:	40 e0       	ldi	r20, 0x00	; 0
 1c2:	50 e0       	ldi	r21, 0x00	; 0
 1c4:	0e 94 1e 07 	call	0xe3c	; 0xe3c <__divmodsi4>
 1c8:	ca 01       	movw	r24, r20
 1ca:	b9 01       	movw	r22, r18
 1cc:	2a e0       	ldi	r18, 0x0A	; 10
 1ce:	30 e0       	ldi	r19, 0x00	; 0
 1d0:	40 e0       	ldi	r20, 0x00	; 0
 1d2:	50 e0       	ldi	r21, 0x00	; 0
 1d4:	0e 94 1e 07 	call	0xe3c	; 0xe3c <__divmodsi4>
 1d8:	80 e3       	ldi	r24, 0x30	; 48
 1da:	86 0f       	add	r24, r22
 1dc:	0e 94 64 00 	call	0xc8	; 0xc8 <_Z12uart_putcharh>
	if(d>=10) uart_putchar(((d/10)%10)+48);
 1e0:	8a e0       	ldi	r24, 0x0A	; 10
 1e2:	c8 16       	cp	r12, r24
 1e4:	d1 04       	cpc	r13, r1
 1e6:	e1 04       	cpc	r14, r1
 1e8:	f1 04       	cpc	r15, r1
 1ea:	bc f0       	brlt	.+46     	; 0x21a <_Z8uart_decl+0x130>
 1ec:	0f 2e       	mov	r0, r31
 1ee:	fa e0       	ldi	r31, 0x0A	; 10
 1f0:	8f 2e       	mov	r8, r31
 1f2:	91 2c       	mov	r9, r1
 1f4:	a1 2c       	mov	r10, r1
 1f6:	b1 2c       	mov	r11, r1
 1f8:	f0 2d       	mov	r31, r0
 1fa:	c7 01       	movw	r24, r14
 1fc:	b6 01       	movw	r22, r12
 1fe:	a5 01       	movw	r20, r10
 200:	94 01       	movw	r18, r8
 202:	0e 94 1e 07 	call	0xe3c	; 0xe3c <__divmodsi4>
 206:	ca 01       	movw	r24, r20
 208:	b9 01       	movw	r22, r18
 20a:	a5 01       	movw	r20, r10
 20c:	94 01       	movw	r18, r8
 20e:	0e 94 1e 07 	call	0xe3c	; 0xe3c <__divmodsi4>
 212:	80 e3       	ldi	r24, 0x30	; 48
 214:	86 0f       	add	r24, r22
 216:	0e 94 64 00 	call	0xc8	; 0xc8 <_Z12uart_putcharh>
	uart_putchar((d%10)+48);
 21a:	c7 01       	movw	r24, r14
 21c:	b6 01       	movw	r22, r12
 21e:	2a e0       	ldi	r18, 0x0A	; 10
 220:	30 e0       	ldi	r19, 0x00	; 0
 222:	40 e0       	ldi	r20, 0x00	; 0
 224:	50 e0       	ldi	r21, 0x00	; 0
 226:	0e 94 1e 07 	call	0xe3c	; 0xe3c <__divmodsi4>
 22a:	80 e3       	ldi	r24, 0x30	; 48
 22c:	86 0f       	add	r24, r22
 22e:	0e 94 64 00 	call	0xc8	; 0xc8 <_Z12uart_putcharh>
}
 232:	ff 90       	pop	r15
 234:	ef 90       	pop	r14
 236:	df 90       	pop	r13
 238:	cf 90       	pop	r12
 23a:	bf 90       	pop	r11
 23c:	af 90       	pop	r10
 23e:	9f 90       	pop	r9
 240:	8f 90       	pop	r8
 242:	08 95       	ret

00000244 <_Z5timerhhh>:
void timer(uint8_t id, uint8_t prescale, uint8_t ocr){
	// TCCR0B=0x03: 16 - 2040 us
	// TCCR0B=0x04: 64 - 8200 us
	// TCCR0B=0x05: 256 - 32600 us
	if(id==0){
 244:	81 11       	cpse	r24, r1
 246:	03 c0       	rjmp	.+6      	; 0x24e <_Z5timerhhh+0xa>
		TCCR0B=prescale;
 248:	65 bd       	out	0x25, r22	; 37
		OCR0A = ocr;
 24a:	47 bd       	out	0x27, r20	; 39
 24c:	08 95       	ret
	}else if(id==1){
 24e:	81 30       	cpi	r24, 0x01	; 1
 250:	41 f4       	brne	.+16     	; 0x262 <_Z5timerhhh+0x1e>
		TCCR1B=prescale;
 252:	60 93 81 00 	sts	0x0081, r22	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
		OCR1A = ocr;
 256:	50 e0       	ldi	r21, 0x00	; 0
 258:	50 93 89 00 	sts	0x0089, r21	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 25c:	40 93 88 00 	sts	0x0088, r20	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 260:	08 95       	ret
	}else if(id==3){
 262:	83 30       	cpi	r24, 0x03	; 3
 264:	21 f4       	brne	.+8      	; 0x26e <_Z5timerhhh+0x2a>
		TCCR2B=prescale;
 266:	60 93 b1 00 	sts	0x00B1, r22	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7e00b1>
		OCR2A = ocr;
 26a:	40 93 b3 00 	sts	0x00B3, r20	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
 26e:	08 95       	ret

00000270 <_Z5drivehf>:
	}
}
void drive(uint8_t id, float period){
 270:	cf 92       	push	r12
 272:	df 92       	push	r13
 274:	ef 92       	push	r14
 276:	ff 92       	push	r15
 278:	cf 93       	push	r28
 27a:	c8 2f       	mov	r28, r24
 27c:	6a 01       	movw	r12, r20
 27e:	7b 01       	movw	r14, r22
	if(period<2048){
 280:	20 e0       	ldi	r18, 0x00	; 0
 282:	30 e0       	ldi	r19, 0x00	; 0
 284:	40 e0       	ldi	r20, 0x00	; 0
 286:	55 e4       	ldi	r21, 0x45	; 69
 288:	c7 01       	movw	r24, r14
 28a:	b6 01       	movw	r22, r12
 28c:	0e 94 4d 05 	call	0xa9a	; 0xa9a <__cmpsf2>
 290:	88 23       	and	r24, r24
 292:	b4 f4       	brge	.+44     	; 0x2c0 <_Z5drivehf+0x50>
		timer(id, 0x03, period*256/2048);
 294:	20 e0       	ldi	r18, 0x00	; 0
 296:	30 e0       	ldi	r19, 0x00	; 0
 298:	40 e8       	ldi	r20, 0x80	; 128
 29a:	53 e4       	ldi	r21, 0x43	; 67
 29c:	c7 01       	movw	r24, r14
 29e:	b6 01       	movw	r22, r12
 2a0:	0e 94 b1 06 	call	0xd62	; 0xd62 <__mulsf3>
 2a4:	20 e0       	ldi	r18, 0x00	; 0
 2a6:	30 e0       	ldi	r19, 0x00	; 0
 2a8:	40 e0       	ldi	r20, 0x00	; 0
 2aa:	5a e3       	ldi	r21, 0x3A	; 58
 2ac:	0e 94 b1 06 	call	0xd62	; 0xd62 <__mulsf3>
 2b0:	0e 94 cb 05 	call	0xb96	; 0xb96 <__fixunssfsi>
 2b4:	46 2f       	mov	r20, r22
 2b6:	63 e0       	ldi	r22, 0x03	; 3
 2b8:	8c 2f       	mov	r24, r28
 2ba:	0e 94 22 01 	call	0x244	; 0x244 <_Z5timerhhh>
 2be:	3f c0       	rjmp	.+126    	; 0x33e <_Z5drivehf+0xce>
	}else if(period<8192){
 2c0:	20 e0       	ldi	r18, 0x00	; 0
 2c2:	30 e0       	ldi	r19, 0x00	; 0
 2c4:	40 e0       	ldi	r20, 0x00	; 0
 2c6:	56 e4       	ldi	r21, 0x46	; 70
 2c8:	c7 01       	movw	r24, r14
 2ca:	b6 01       	movw	r22, r12
 2cc:	0e 94 4d 05 	call	0xa9a	; 0xa9a <__cmpsf2>
 2d0:	88 23       	and	r24, r24
 2d2:	b4 f4       	brge	.+44     	; 0x300 <_Z5drivehf+0x90>
		timer(id, 0x04, period*256/8192);
 2d4:	20 e0       	ldi	r18, 0x00	; 0
 2d6:	30 e0       	ldi	r19, 0x00	; 0
 2d8:	40 e8       	ldi	r20, 0x80	; 128
 2da:	53 e4       	ldi	r21, 0x43	; 67
 2dc:	c7 01       	movw	r24, r14
 2de:	b6 01       	movw	r22, r12
 2e0:	0e 94 b1 06 	call	0xd62	; 0xd62 <__mulsf3>
 2e4:	20 e0       	ldi	r18, 0x00	; 0
 2e6:	30 e0       	ldi	r19, 0x00	; 0
 2e8:	40 e0       	ldi	r20, 0x00	; 0
 2ea:	59 e3       	ldi	r21, 0x39	; 57
 2ec:	0e 94 b1 06 	call	0xd62	; 0xd62 <__mulsf3>
 2f0:	0e 94 cb 05 	call	0xb96	; 0xb96 <__fixunssfsi>
 2f4:	46 2f       	mov	r20, r22
 2f6:	64 e0       	ldi	r22, 0x04	; 4
 2f8:	8c 2f       	mov	r24, r28
 2fa:	0e 94 22 01 	call	0x244	; 0x244 <_Z5timerhhh>
 2fe:	1f c0       	rjmp	.+62     	; 0x33e <_Z5drivehf+0xce>
	}else if(period<32768){
 300:	20 e0       	ldi	r18, 0x00	; 0
 302:	30 e0       	ldi	r19, 0x00	; 0
 304:	40 e0       	ldi	r20, 0x00	; 0
 306:	57 e4       	ldi	r21, 0x47	; 71
 308:	c7 01       	movw	r24, r14
 30a:	b6 01       	movw	r22, r12
 30c:	0e 94 4d 05 	call	0xa9a	; 0xa9a <__cmpsf2>
 310:	88 23       	and	r24, r24
 312:	ac f4       	brge	.+42     	; 0x33e <_Z5drivehf+0xce>
		timer(id, 0x05, period*256/32768);
 314:	20 e0       	ldi	r18, 0x00	; 0
 316:	30 e0       	ldi	r19, 0x00	; 0
 318:	40 e8       	ldi	r20, 0x80	; 128
 31a:	53 e4       	ldi	r21, 0x43	; 67
 31c:	c7 01       	movw	r24, r14
 31e:	b6 01       	movw	r22, r12
 320:	0e 94 b1 06 	call	0xd62	; 0xd62 <__mulsf3>
 324:	20 e0       	ldi	r18, 0x00	; 0
 326:	30 e0       	ldi	r19, 0x00	; 0
 328:	40 e0       	ldi	r20, 0x00	; 0
 32a:	58 e3       	ldi	r21, 0x38	; 56
 32c:	0e 94 b1 06 	call	0xd62	; 0xd62 <__mulsf3>
 330:	0e 94 cb 05 	call	0xb96	; 0xb96 <__fixunssfsi>
 334:	46 2f       	mov	r20, r22
 336:	65 e0       	ldi	r22, 0x05	; 5
 338:	8c 2f       	mov	r24, r28
 33a:	0e 94 22 01 	call	0x244	; 0x244 <_Z5timerhhh>
	}
}
 33e:	cf 91       	pop	r28
 340:	ff 90       	pop	r15
 342:	ef 90       	pop	r14
 344:	df 90       	pop	r13
 346:	cf 90       	pop	r12
 348:	08 95       	ret

0000034a <_Z9gpio_initv>:
void gpio_init(){
	TCCR0A=0x42;
 34a:	82 e4       	ldi	r24, 0x42	; 66
 34c:	84 bd       	out	0x24, r24	; 36
	TCCR0B=0;
 34e:	15 bc       	out	0x25, r1	; 37
	TCNT0=0x00;
 350:	16 bc       	out	0x26, r1	; 38
	OCR0A=255;
 352:	9f ef       	ldi	r25, 0xFF	; 255
 354:	97 bd       	out	0x27, r25	; 39
	OCR0B=0x00;
 356:	18 bc       	out	0x28, r1	; 40
		
		
	TCCR1A=0x40;
 358:	90 e4       	ldi	r25, 0x40	; 64
 35a:	90 93 80 00 	sts	0x0080, r25	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
	TCCR1B=0x09;
 35e:	99 e0       	ldi	r25, 0x09	; 9
 360:	90 93 81 00 	sts	0x0081, r25	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
	TCNT1H=0x00;
 364:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
	TCNT1L=0x00;
 368:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
	ICR1H=0x00;
 36c:	10 92 87 00 	sts	0x0087, r1	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
	ICR1L=0x00;
 370:	10 92 86 00 	sts	0x0086, r1	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
	OCR1AH=0x00;
 374:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
	OCR1AL=110;
 378:	9e e6       	ldi	r25, 0x6E	; 110
 37a:	90 93 88 00 	sts	0x0088, r25	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
	OCR1BH=0x00;
 37e:	10 92 8b 00 	sts	0x008B, r1	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
	OCR1BL=0x00;
 382:	10 92 8a 00 	sts	0x008A, r1	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
		
		
	ASSR=0x00;
 386:	10 92 b6 00 	sts	0x00B6, r1	; 0x8000b6 <__TEXT_REGION_LENGTH__+0x7e00b6>
	TCCR2A=0x42;
 38a:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
	TCCR2B=0x01;
 38e:	81 e0       	ldi	r24, 0x01	; 1
 390:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7e00b1>
	TCNT2=0x00;
 394:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7e00b2>
	OCR2A=120;
 398:	88 e7       	ldi	r24, 0x78	; 120
 39a:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
	OCR2B=0x00;
 39e:	10 92 b4 00 	sts	0x00B4, r1	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7e00b4>
		
	TIMSK0=0x02;
 3a2:	82 e0       	ldi	r24, 0x02	; 2
 3a4:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7e006e>
	TIMSK1=0x02;
 3a8:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
	TIMSK2=0x02;
 3ac:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__TEXT_REGION_LENGTH__+0x7e0070>
	ACSR=0x80;
 3b0:	80 e8       	ldi	r24, 0x80	; 128
 3b2:	80 bf       	out	0x30, r24	; 48
 3b4:	08 95       	ret

000003b6 <_Z14interrupt_initv>:
}
void interrupt_init(){
	PORTB=0x00;
 3b6:	15 b8       	out	0x05, r1	; 5
	DDRB=0b11010;
 3b8:	8a e1       	ldi	r24, 0x1A	; 26
 3ba:	84 b9       	out	0x04, r24	; 4

	PORTC=0x00;
 3bc:	18 b8       	out	0x08, r1	; 8
	DDRC=0x00;
 3be:	17 b8       	out	0x07, r1	; 7

	PORTD=0x00;
 3c0:	1b b8       	out	0x0b, r1	; 11
	DDRD=0b01100000;
 3c2:	80 e6       	ldi	r24, 0x60	; 96
 3c4:	8a b9       	out	0x0a, r24	; 10
 3c6:	08 95       	ret

000003c8 <_Z9stopTimerh>:
}
void stopTimer(uint8_t id){
	if(id==0)
 3c8:	81 11       	cpse	r24, r1
 3ca:	01 c0       	rjmp	.+2      	; 0x3ce <_Z9stopTimerh+0x6>
	TCCR0B=0;
 3cc:	15 bc       	out	0x25, r1	; 37
 3ce:	08 95       	ret

000003d0 <_Z10checkSpeedv>:
	uart_dec(period);
	uart_putchar('\t');
	uart_dec(coord);
	//uart_putchar('\t');
	//uart_dec(acceleration);
	uart_putchar('\n');
 3d0:	8f 92       	push	r8
 3d2:	9f 92       	push	r9
 3d4:	af 92       	push	r10
 3d6:	bf 92       	push	r11
 3d8:	cf 92       	push	r12
 3da:	df 92       	push	r13
 3dc:	ef 92       	push	r14
 3de:	ff 92       	push	r15
 3e0:	80 90 1e 01 	lds	r8, 0x011E	; 0x80011e <speed>
 3e4:	90 90 1f 01 	lds	r9, 0x011F	; 0x80011f <speed+0x1>
 3e8:	a0 90 20 01 	lds	r10, 0x0120	; 0x800120 <speed+0x2>
 3ec:	b0 90 21 01 	lds	r11, 0x0121	; 0x800121 <speed+0x3>
 3f0:	c0 90 0c 01 	lds	r12, 0x010C	; 0x80010c <maxSpeed>
 3f4:	d0 90 0d 01 	lds	r13, 0x010D	; 0x80010d <maxSpeed+0x1>
 3f8:	e0 90 0e 01 	lds	r14, 0x010E	; 0x80010e <maxSpeed+0x2>
 3fc:	f0 90 0f 01 	lds	r15, 0x010F	; 0x80010f <maxSpeed+0x3>
 400:	a7 01       	movw	r20, r14
 402:	96 01       	movw	r18, r12
 404:	c5 01       	movw	r24, r10
 406:	b4 01       	movw	r22, r8
 408:	0e 94 ac 06 	call	0xd58	; 0xd58 <__gesf2>
 40c:	18 16       	cp	r1, r24
 40e:	4c f4       	brge	.+18     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
 410:	c0 92 1e 01 	sts	0x011E, r12	; 0x80011e <speed>
 414:	d0 92 1f 01 	sts	0x011F, r13	; 0x80011f <speed+0x1>
 418:	e0 92 20 01 	sts	0x0120, r14	; 0x800120 <speed+0x2>
 41c:	f0 92 21 01 	sts	0x0121, r15	; 0x800121 <speed+0x3>
 420:	31 c0       	rjmp	.+98     	; 0x484 <__LOCK_REGION_LENGTH__+0x84>
 422:	f7 fa       	bst	r15, 7
 424:	f0 94       	com	r15
 426:	f7 f8       	bld	r15, 7
 428:	f0 94       	com	r15
 42a:	a7 01       	movw	r20, r14
 42c:	96 01       	movw	r18, r12
 42e:	c5 01       	movw	r24, r10
 430:	b4 01       	movw	r22, r8
 432:	0e 94 4d 05 	call	0xa9a	; 0xa9a <__cmpsf2>
 436:	88 23       	and	r24, r24
 438:	4c f4       	brge	.+18     	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
 43a:	c0 92 1e 01 	sts	0x011E, r12	; 0x80011e <speed>
 43e:	d0 92 1f 01 	sts	0x011F, r13	; 0x80011f <speed+0x1>
 442:	e0 92 20 01 	sts	0x0120, r14	; 0x800120 <speed+0x2>
 446:	f0 92 21 01 	sts	0x0121, r15	; 0x800121 <speed+0x3>
 44a:	1c c0       	rjmp	.+56     	; 0x484 <__LOCK_REGION_LENGTH__+0x84>
 44c:	20 e0       	ldi	r18, 0x00	; 0
 44e:	30 e0       	ldi	r19, 0x00	; 0
 450:	40 e8       	ldi	r20, 0x80	; 128
 452:	5f e3       	ldi	r21, 0x3F	; 63
 454:	c5 01       	movw	r24, r10
 456:	b4 01       	movw	r22, r8
 458:	0e 94 4d 05 	call	0xa9a	; 0xa9a <__cmpsf2>
 45c:	88 23       	and	r24, r24
 45e:	94 f4       	brge	.+36     	; 0x484 <__LOCK_REGION_LENGTH__+0x84>
 460:	20 e0       	ldi	r18, 0x00	; 0
 462:	30 e0       	ldi	r19, 0x00	; 0
 464:	40 e8       	ldi	r20, 0x80	; 128
 466:	5f eb       	ldi	r21, 0xBF	; 191
 468:	c5 01       	movw	r24, r10
 46a:	b4 01       	movw	r22, r8
 46c:	0e 94 ac 06 	call	0xd58	; 0xd58 <__gesf2>
 470:	18 16       	cp	r1, r24
 472:	44 f4       	brge	.+16     	; 0x484 <__LOCK_REGION_LENGTH__+0x84>
 474:	10 92 1e 01 	sts	0x011E, r1	; 0x80011e <speed>
 478:	10 92 1f 01 	sts	0x011F, r1	; 0x80011f <speed+0x1>
 47c:	10 92 20 01 	sts	0x0120, r1	; 0x800120 <speed+0x2>
 480:	10 92 21 01 	sts	0x0121, r1	; 0x800121 <speed+0x3>
 484:	ff 90       	pop	r15
 486:	ef 90       	pop	r14
 488:	df 90       	pop	r13
 48a:	cf 90       	pop	r12
 48c:	bf 90       	pop	r11
 48e:	af 90       	pop	r10
 490:	9f 90       	pop	r9
 492:	8f 90       	pop	r8
 494:	08 95       	ret

00000496 <_Z8frictionv>:
 496:	cf 92       	push	r12
 498:	df 92       	push	r13
 49a:	ef 92       	push	r14
 49c:	ff 92       	push	r15
 49e:	c0 90 1e 01 	lds	r12, 0x011E	; 0x80011e <speed>
 4a2:	d0 90 1f 01 	lds	r13, 0x011F	; 0x80011f <speed+0x1>
 4a6:	e0 90 20 01 	lds	r14, 0x0120	; 0x800120 <speed+0x2>
 4aa:	f0 90 21 01 	lds	r15, 0x0121	; 0x800121 <speed+0x3>
 4ae:	20 e0       	ldi	r18, 0x00	; 0
 4b0:	30 e0       	ldi	r19, 0x00	; 0
 4b2:	a9 01       	movw	r20, r18
 4b4:	c7 01       	movw	r24, r14
 4b6:	b6 01       	movw	r22, r12
 4b8:	0e 94 ac 06 	call	0xd58	; 0xd58 <__gesf2>
 4bc:	18 16       	cp	r1, r24
 4be:	ac f4       	brge	.+42     	; 0x4ea <_Z8frictionv+0x54>
 4c0:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
 4c4:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
 4c8:	40 91 02 01 	lds	r20, 0x0102	; 0x800102 <__data_start+0x2>
 4cc:	50 91 03 01 	lds	r21, 0x0103	; 0x800103 <__data_start+0x3>
 4d0:	c7 01       	movw	r24, r14
 4d2:	b6 01       	movw	r22, r12
 4d4:	0e 94 e0 04 	call	0x9c0	; 0x9c0 <__subsf3>
 4d8:	60 93 1e 01 	sts	0x011E, r22	; 0x80011e <speed>
 4dc:	70 93 1f 01 	sts	0x011F, r23	; 0x80011f <speed+0x1>
 4e0:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <speed+0x2>
 4e4:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <speed+0x3>
 4e8:	1d c0       	rjmp	.+58     	; 0x524 <_Z8frictionv+0x8e>
 4ea:	20 e0       	ldi	r18, 0x00	; 0
 4ec:	30 e0       	ldi	r19, 0x00	; 0
 4ee:	a9 01       	movw	r20, r18
 4f0:	c7 01       	movw	r24, r14
 4f2:	b6 01       	movw	r22, r12
 4f4:	0e 94 4d 05 	call	0xa9a	; 0xa9a <__cmpsf2>
 4f8:	88 23       	and	r24, r24
 4fa:	a4 f4       	brge	.+40     	; 0x524 <_Z8frictionv+0x8e>
 4fc:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
 500:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
 504:	40 91 02 01 	lds	r20, 0x0102	; 0x800102 <__data_start+0x2>
 508:	50 91 03 01 	lds	r21, 0x0103	; 0x800103 <__data_start+0x3>
 50c:	c7 01       	movw	r24, r14
 50e:	b6 01       	movw	r22, r12
 510:	0e 94 e1 04 	call	0x9c2	; 0x9c2 <__addsf3>
 514:	60 93 1e 01 	sts	0x011E, r22	; 0x80011e <speed>
 518:	70 93 1f 01 	sts	0x011F, r23	; 0x80011f <speed+0x1>
 51c:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <speed+0x2>
 520:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <speed+0x3>
 524:	ff 90       	pop	r15
 526:	ef 90       	pop	r14
 528:	df 90       	pop	r13
 52a:	cf 90       	pop	r12
 52c:	08 95       	ret

0000052e <_Z10physicallyv>:
}
void physically(){
 52e:	cf 92       	push	r12
 530:	df 92       	push	r13
 532:	ef 92       	push	r14
 534:	ff 92       	push	r15
	if(speed>0){
 536:	20 e0       	ldi	r18, 0x00	; 0
 538:	30 e0       	ldi	r19, 0x00	; 0
 53a:	a9 01       	movw	r20, r18
 53c:	60 91 1e 01 	lds	r22, 0x011E	; 0x80011e <speed>
 540:	70 91 1f 01 	lds	r23, 0x011F	; 0x80011f <speed+0x1>
 544:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <speed+0x2>
 548:	90 91 21 01 	lds	r25, 0x0121	; 0x800121 <speed+0x3>
 54c:	0e 94 ac 06 	call	0xd58	; 0xd58 <__gesf2>
 550:	18 16       	cp	r1, r24
 552:	14 f4       	brge	.+4      	; 0x558 <_Z10physicallyv+0x2a>
		PORTD |= 0b00100000;
 554:	5d 9a       	sbi	0x0b, 5	; 11
 556:	01 c0       	rjmp	.+2      	; 0x55a <_Z10physicallyv+0x2c>
	}else{
		PORTD &= 0b11011111;
 558:	5d 98       	cbi	0x0b, 5	; 11
	}
	speed += acceleration;
 55a:	20 91 1a 01 	lds	r18, 0x011A	; 0x80011a <acceleration>
 55e:	30 91 1b 01 	lds	r19, 0x011B	; 0x80011b <acceleration+0x1>
 562:	40 91 1c 01 	lds	r20, 0x011C	; 0x80011c <acceleration+0x2>
 566:	50 91 1d 01 	lds	r21, 0x011D	; 0x80011d <acceleration+0x3>
 56a:	60 91 1e 01 	lds	r22, 0x011E	; 0x80011e <speed>
 56e:	70 91 1f 01 	lds	r23, 0x011F	; 0x80011f <speed+0x1>
 572:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <speed+0x2>
 576:	90 91 21 01 	lds	r25, 0x0121	; 0x800121 <speed+0x3>
 57a:	0e 94 e1 04 	call	0x9c2	; 0x9c2 <__addsf3>
 57e:	60 93 1e 01 	sts	0x011E, r22	; 0x80011e <speed>
 582:	70 93 1f 01 	sts	0x011F, r23	; 0x80011f <speed+0x1>
 586:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <speed+0x2>
 58a:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <speed+0x3>
	checkSpeed();
 58e:	0e 94 e8 01 	call	0x3d0	; 0x3d0 <_Z10checkSpeedv>
	period = 20000./speed;
 592:	20 91 1e 01 	lds	r18, 0x011E	; 0x80011e <speed>
 596:	30 91 1f 01 	lds	r19, 0x011F	; 0x80011f <speed+0x1>
 59a:	40 91 20 01 	lds	r20, 0x0120	; 0x800120 <speed+0x2>
 59e:	50 91 21 01 	lds	r21, 0x0121	; 0x800121 <speed+0x3>
 5a2:	60 e0       	ldi	r22, 0x00	; 0
 5a4:	70 e4       	ldi	r23, 0x40	; 64
 5a6:	8c e9       	ldi	r24, 0x9C	; 156
 5a8:	96 e4       	ldi	r25, 0x46	; 70
 5aa:	0e 94 52 05 	call	0xaa4	; 0xaa4 <__divsf3>
 5ae:	6b 01       	movw	r12, r22
 5b0:	7c 01       	movw	r14, r24
	if(period<0) period = -period;
 5b2:	20 e0       	ldi	r18, 0x00	; 0
 5b4:	30 e0       	ldi	r19, 0x00	; 0
 5b6:	a9 01       	movw	r20, r18
 5b8:	0e 94 4d 05 	call	0xa9a	; 0xa9a <__cmpsf2>
 5bc:	88 23       	and	r24, r24
 5be:	4c f0       	brlt	.+18     	; 0x5d2 <_Z10physicallyv+0xa4>
	}else{
		PORTD &= 0b11011111;
	}
	speed += acceleration;
	checkSpeed();
	period = 20000./speed;
 5c0:	c0 92 10 01 	sts	0x0110, r12	; 0x800110 <period>
 5c4:	d0 92 11 01 	sts	0x0111, r13	; 0x800111 <period+0x1>
 5c8:	e0 92 12 01 	sts	0x0112, r14	; 0x800112 <period+0x2>
 5cc:	f0 92 13 01 	sts	0x0113, r15	; 0x800113 <period+0x3>
 5d0:	0c c0       	rjmp	.+24     	; 0x5ea <_Z10physicallyv+0xbc>
	if(period<0) period = -period;
 5d2:	f7 fa       	bst	r15, 7
 5d4:	f0 94       	com	r15
 5d6:	f7 f8       	bld	r15, 7
 5d8:	f0 94       	com	r15
 5da:	c0 92 10 01 	sts	0x0110, r12	; 0x800110 <period>
 5de:	d0 92 11 01 	sts	0x0111, r13	; 0x800111 <period+0x1>
 5e2:	e0 92 12 01 	sts	0x0112, r14	; 0x800112 <period+0x2>
 5e6:	f0 92 13 01 	sts	0x0113, r15	; 0x800113 <period+0x3>
	drive(0, period);
 5ea:	40 91 10 01 	lds	r20, 0x0110	; 0x800110 <period>
 5ee:	50 91 11 01 	lds	r21, 0x0111	; 0x800111 <period+0x1>
 5f2:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <period+0x2>
 5f6:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <period+0x3>
 5fa:	80 e0       	ldi	r24, 0x00	; 0
 5fc:	0e 94 38 01 	call	0x270	; 0x270 <_Z5drivehf>
	fizmath = false;
 600:	10 92 19 01 	sts	0x0119, r1	; 0x800119 <fizmath>
}
 604:	ff 90       	pop	r15
 606:	ef 90       	pop	r14
 608:	df 90       	pop	r13
 60a:	cf 90       	pop	r12
 60c:	08 95       	ret

0000060e <_Z8setCoordv>:
	}else if(speed<1 && speed>-1){
		speed = 0;
	}
}
int32_t c=0;
void setCoord(){
 60e:	cf 92       	push	r12
 610:	df 92       	push	r13
 612:	ef 92       	push	r14
 614:	ff 92       	push	r15
	float newSpeed = requestFrequency*(targetCoord-coord);
 616:	20 91 22 01 	lds	r18, 0x0122	; 0x800122 <coord>
 61a:	30 91 23 01 	lds	r19, 0x0123	; 0x800123 <coord+0x1>
 61e:	40 91 24 01 	lds	r20, 0x0124	; 0x800124 <coord+0x2>
 622:	50 91 25 01 	lds	r21, 0x0125	; 0x800125 <coord+0x3>
 626:	60 91 26 01 	lds	r22, 0x0126	; 0x800126 <targetCoord>
 62a:	70 91 27 01 	lds	r23, 0x0127	; 0x800127 <targetCoord+0x1>
 62e:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <targetCoord+0x2>
 632:	90 91 29 01 	lds	r25, 0x0129	; 0x800129 <targetCoord+0x3>
 636:	0e 94 e0 04 	call	0x9c0	; 0x9c0 <__subsf3>
 63a:	20 91 04 01 	lds	r18, 0x0104	; 0x800104 <requestFrequency>
 63e:	30 91 05 01 	lds	r19, 0x0105	; 0x800105 <requestFrequency+0x1>
 642:	40 91 06 01 	lds	r20, 0x0106	; 0x800106 <requestFrequency+0x2>
 646:	50 91 07 01 	lds	r21, 0x0107	; 0x800107 <requestFrequency+0x3>
 64a:	0e 94 b1 06 	call	0xd62	; 0xd62 <__mulsf3>
	acceleration = newSpeed-speed;
 64e:	20 91 1e 01 	lds	r18, 0x011E	; 0x80011e <speed>
 652:	30 91 1f 01 	lds	r19, 0x011F	; 0x80011f <speed+0x1>
 656:	40 91 20 01 	lds	r20, 0x0120	; 0x800120 <speed+0x2>
 65a:	50 91 21 01 	lds	r21, 0x0121	; 0x800121 <speed+0x3>
 65e:	0e 94 e0 04 	call	0x9c0	; 0x9c0 <__subsf3>
 662:	60 93 1a 01 	sts	0x011A, r22	; 0x80011a <acceleration>
 666:	70 93 1b 01 	sts	0x011B, r23	; 0x80011b <acceleration+0x1>
 66a:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <acceleration+0x2>
 66e:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <acceleration+0x3>
	if(acceleration>maxAcceleration) acceleration = maxAcceleration;
 672:	c0 90 08 01 	lds	r12, 0x0108	; 0x800108 <maxAcceleration>
 676:	d0 90 09 01 	lds	r13, 0x0109	; 0x800109 <maxAcceleration+0x1>
 67a:	e0 90 0a 01 	lds	r14, 0x010A	; 0x80010a <maxAcceleration+0x2>
 67e:	f0 90 0b 01 	lds	r15, 0x010B	; 0x80010b <maxAcceleration+0x3>
 682:	a7 01       	movw	r20, r14
 684:	96 01       	movw	r18, r12
 686:	0e 94 ac 06 	call	0xd58	; 0xd58 <__gesf2>
 68a:	18 16       	cp	r1, r24
 68c:	44 f4       	brge	.+16     	; 0x69e <_Z8setCoordv+0x90>
 68e:	c0 92 1a 01 	sts	0x011A, r12	; 0x80011a <acceleration>
 692:	d0 92 1b 01 	sts	0x011B, r13	; 0x80011b <acceleration+0x1>
 696:	e0 92 1c 01 	sts	0x011C, r14	; 0x80011c <acceleration+0x2>
 69a:	f0 92 1d 01 	sts	0x011D, r15	; 0x80011d <acceleration+0x3>
	physically();
 69e:	0e 94 97 02 	call	0x52e	; 0x52e <_Z10physicallyv>
	return;
				uart_dec(targetCoord);
				uart_putchar('\n');

}
 6a2:	ff 90       	pop	r15
 6a4:	ef 90       	pop	r14
 6a6:	df 90       	pop	r13
 6a8:	cf 90       	pop	r12
 6aa:	08 95       	ret

000006ac <_Z11readUartDecv>:
void readUartDec(){
 6ac:	0f 93       	push	r16
 6ae:	1f 93       	push	r17
	static bool minus;
	if(uart_available()){
 6b0:	0e 94 6c 00 	call	0xd8	; 0xd8 <_Z14uart_availablev>
 6b4:	88 23       	and	r24, r24
 6b6:	09 f4       	brne	.+2      	; 0x6ba <_Z11readUartDecv+0xe>
 6b8:	97 c0       	rjmp	.+302    	; 0x7e8 <_Z11readUartDecv+0x13c>
		
		int8_t u = uart_getchar();
 6ba:	0e 94 72 00 	call	0xe4	; 0xe4 <_Z12uart_getcharv>
 6be:	48 2f       	mov	r20, r24
		if(u=='\n'){
 6c0:	8a 30       	cpi	r24, 0x0A	; 10
 6c2:	09 f0       	breq	.+2      	; 0x6c6 <_Z11readUartDecv+0x1a>
 6c4:	3f c0       	rjmp	.+126    	; 0x744 <_Z11readUartDecv+0x98>
			if(minus)
 6c6:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <__data_end>
 6ca:	88 23       	and	r24, r24
 6cc:	e1 f0       	breq	.+56     	; 0x706 <_Z11readUartDecv+0x5a>
				targetCoord = -c;
 6ce:	80 91 15 01 	lds	r24, 0x0115	; 0x800115 <c>
 6d2:	90 91 16 01 	lds	r25, 0x0116	; 0x800116 <c+0x1>
 6d6:	a0 91 17 01 	lds	r26, 0x0117	; 0x800117 <c+0x2>
 6da:	b0 91 18 01 	lds	r27, 0x0118	; 0x800118 <c+0x3>
 6de:	9c 01       	movw	r18, r24
 6e0:	ad 01       	movw	r20, r26
 6e2:	66 27       	eor	r22, r22
 6e4:	77 27       	eor	r23, r23
 6e6:	cb 01       	movw	r24, r22
 6e8:	62 1b       	sub	r22, r18
 6ea:	73 0b       	sbc	r23, r19
 6ec:	84 0b       	sbc	r24, r20
 6ee:	95 0b       	sbc	r25, r21
 6f0:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <__floatsisf>
 6f4:	60 93 26 01 	sts	0x0126, r22	; 0x800126 <targetCoord>
 6f8:	70 93 27 01 	sts	0x0127, r23	; 0x800127 <targetCoord+0x1>
 6fc:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <targetCoord+0x2>
 700:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <targetCoord+0x3>
 704:	12 c0       	rjmp	.+36     	; 0x72a <_Z11readUartDecv+0x7e>
			else
				targetCoord = c;
 706:	60 91 15 01 	lds	r22, 0x0115	; 0x800115 <c>
 70a:	70 91 16 01 	lds	r23, 0x0116	; 0x800116 <c+0x1>
 70e:	80 91 17 01 	lds	r24, 0x0117	; 0x800117 <c+0x2>
 712:	90 91 18 01 	lds	r25, 0x0118	; 0x800118 <c+0x3>
 716:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <__floatsisf>
 71a:	60 93 26 01 	sts	0x0126, r22	; 0x800126 <targetCoord>
 71e:	70 93 27 01 	sts	0x0127, r23	; 0x800127 <targetCoord+0x1>
 722:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <targetCoord+0x2>
 726:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <targetCoord+0x3>
				
			setCoord();
 72a:	0e 94 07 03 	call	0x60e	; 0x60e <_Z8setCoordv>
			//drive(0, targetCoord);
			c = 0;
 72e:	10 92 15 01 	sts	0x0115, r1	; 0x800115 <c>
 732:	10 92 16 01 	sts	0x0116, r1	; 0x800116 <c+0x1>
 736:	10 92 17 01 	sts	0x0117, r1	; 0x800117 <c+0x2>
 73a:	10 92 18 01 	sts	0x0118, r1	; 0x800118 <c+0x3>
			minus = false;
 73e:	10 92 14 01 	sts	0x0114, r1	; 0x800114 <__data_end>
 742:	52 c0       	rjmp	.+164    	; 0x7e8 <_Z11readUartDecv+0x13c>
		}else if(u=='-'){
 744:	8d 32       	cpi	r24, 0x2D	; 45
 746:	61 f4       	brne	.+24     	; 0x760 <_Z11readUartDecv+0xb4>
			c = 0;
 748:	10 92 15 01 	sts	0x0115, r1	; 0x800115 <c>
 74c:	10 92 16 01 	sts	0x0116, r1	; 0x800116 <c+0x1>
 750:	10 92 17 01 	sts	0x0117, r1	; 0x800117 <c+0x2>
 754:	10 92 18 01 	sts	0x0118, r1	; 0x800118 <c+0x3>
			minus = true;
 758:	81 e0       	ldi	r24, 0x01	; 1
 75a:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <__data_end>
 75e:	44 c0       	rjmp	.+136    	; 0x7e8 <_Z11readUartDecv+0x13c>
		}else{
			if(c==0){
 760:	80 91 15 01 	lds	r24, 0x0115	; 0x800115 <c>
 764:	90 91 16 01 	lds	r25, 0x0116	; 0x800116 <c+0x1>
 768:	a0 91 17 01 	lds	r26, 0x0117	; 0x800117 <c+0x2>
 76c:	b0 91 18 01 	lds	r27, 0x0118	; 0x800118 <c+0x3>
 770:	00 97       	sbiw	r24, 0x00	; 0
 772:	a1 05       	cpc	r26, r1
 774:	b1 05       	cpc	r27, r1
 776:	89 f4       	brne	.+34     	; 0x79a <_Z11readUartDecv+0xee>
				c = u-48;
 778:	84 2f       	mov	r24, r20
 77a:	44 0f       	add	r20, r20
 77c:	99 0b       	sbc	r25, r25
 77e:	c0 97       	sbiw	r24, 0x30	; 48
 780:	09 2e       	mov	r0, r25
 782:	00 0c       	add	r0, r0
 784:	aa 0b       	sbc	r26, r26
 786:	bb 0b       	sbc	r27, r27
 788:	80 93 15 01 	sts	0x0115, r24	; 0x800115 <c>
 78c:	90 93 16 01 	sts	0x0116, r25	; 0x800116 <c+0x1>
 790:	a0 93 17 01 	sts	0x0117, r26	; 0x800117 <c+0x2>
 794:	b0 93 18 01 	sts	0x0118, r27	; 0x800118 <c+0x3>
 798:	27 c0       	rjmp	.+78     	; 0x7e8 <_Z11readUartDecv+0x13c>
			}else{
				c *= 10;
 79a:	88 0f       	add	r24, r24
 79c:	99 1f       	adc	r25, r25
 79e:	aa 1f       	adc	r26, r26
 7a0:	bb 1f       	adc	r27, r27
 7a2:	8c 01       	movw	r16, r24
 7a4:	9d 01       	movw	r18, r26
 7a6:	00 0f       	add	r16, r16
 7a8:	11 1f       	adc	r17, r17
 7aa:	22 1f       	adc	r18, r18
 7ac:	33 1f       	adc	r19, r19
 7ae:	00 0f       	add	r16, r16
 7b0:	11 1f       	adc	r17, r17
 7b2:	22 1f       	adc	r18, r18
 7b4:	33 1f       	adc	r19, r19
 7b6:	80 0f       	add	r24, r16
 7b8:	91 1f       	adc	r25, r17
 7ba:	a2 1f       	adc	r26, r18
 7bc:	b3 1f       	adc	r27, r19
				c += u-48;
 7be:	04 2e       	mov	r0, r20
 7c0:	00 0c       	add	r0, r0
 7c2:	55 0b       	sbc	r21, r21
 7c4:	40 53       	subi	r20, 0x30	; 48
 7c6:	51 09       	sbc	r21, r1
 7c8:	05 2e       	mov	r0, r21
 7ca:	00 0c       	add	r0, r0
 7cc:	66 0b       	sbc	r22, r22
 7ce:	77 0b       	sbc	r23, r23
 7d0:	84 0f       	add	r24, r20
 7d2:	95 1f       	adc	r25, r21
 7d4:	a6 1f       	adc	r26, r22
 7d6:	b7 1f       	adc	r27, r23
 7d8:	80 93 15 01 	sts	0x0115, r24	; 0x800115 <c>
 7dc:	90 93 16 01 	sts	0x0116, r25	; 0x800116 <c+0x1>
 7e0:	a0 93 17 01 	sts	0x0117, r26	; 0x800117 <c+0x2>
 7e4:	b0 93 18 01 	sts	0x0118, r27	; 0x800118 <c+0x3>
			}
		}
		
	}
}
 7e8:	1f 91       	pop	r17
 7ea:	0f 91       	pop	r16
 7ec:	08 95       	ret

000007ee <main>:
int main(void)
{
	gpio_init();
 7ee:	0e 94 a5 01 	call	0x34a	; 0x34a <_Z9gpio_initv>
	interrupt_init();
 7f2:	0e 94 db 01 	call	0x3b6	; 0x3b6 <_Z14interrupt_initv>
	uart_init();
 7f6:	0e 94 53 00 	call	0xa6	; 0xa6 <_Z9uart_initv>
	asm("sei");
 7fa:	78 94       	sei
    while (1) 
    {
		readUartDec();
 7fc:	0e 94 56 03 	call	0x6ac	; 0x6ac <_Z11readUartDecv>
			}
		}
		
	}
}
int main(void)
 800:	fd cf       	rjmp	.-6      	; 0x7fc <main+0xe>

00000802 <_Z14mathematicallyv>:
	period = 20000./speed;
	if(period<0) period = -period;
	drive(0, period);
	fizmath = false;
}
void mathematically(){
 802:	cf 92       	push	r12
 804:	df 92       	push	r13
 806:	ef 92       	push	r14
 808:	ff 92       	push	r15
		if(acceleration==0){
 80a:	20 e0       	ldi	r18, 0x00	; 0
 80c:	30 e0       	ldi	r19, 0x00	; 0
 80e:	a9 01       	movw	r20, r18
 810:	60 91 1a 01 	lds	r22, 0x011A	; 0x80011a <acceleration>
 814:	70 91 1b 01 	lds	r23, 0x011B	; 0x80011b <acceleration+0x1>
 818:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <acceleration+0x2>
 81c:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <acceleration+0x3>
 820:	0e 94 4d 05 	call	0xa9a	; 0xa9a <__cmpsf2>
 824:	81 11       	cpse	r24, r1
 826:	02 c0       	rjmp	.+4      	; 0x82c <_Z14mathematicallyv+0x2a>
			friction();
 828:	0e 94 4b 02 	call	0x496	; 0x496 <_Z8frictionv>
		}
		if(speed > 0){
 82c:	c0 90 1e 01 	lds	r12, 0x011E	; 0x80011e <speed>
 830:	d0 90 1f 01 	lds	r13, 0x011F	; 0x80011f <speed+0x1>
 834:	e0 90 20 01 	lds	r14, 0x0120	; 0x800120 <speed+0x2>
 838:	f0 90 21 01 	lds	r15, 0x0121	; 0x800121 <speed+0x3>
 83c:	20 e0       	ldi	r18, 0x00	; 0
 83e:	30 e0       	ldi	r19, 0x00	; 0
 840:	a9 01       	movw	r20, r18
 842:	c7 01       	movw	r24, r14
 844:	b6 01       	movw	r22, r12
 846:	0e 94 ac 06 	call	0xd58	; 0xd58 <__gesf2>
 84a:	18 16       	cp	r1, r24
 84c:	64 f5       	brge	.+88     	; 0x8a6 <_Z14mathematicallyv+0xa4>
			coord++;
 84e:	20 e0       	ldi	r18, 0x00	; 0
 850:	30 e0       	ldi	r19, 0x00	; 0
 852:	40 e8       	ldi	r20, 0x80	; 128
 854:	5f e3       	ldi	r21, 0x3F	; 63
 856:	60 91 22 01 	lds	r22, 0x0122	; 0x800122 <coord>
 85a:	70 91 23 01 	lds	r23, 0x0123	; 0x800123 <coord+0x1>
 85e:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <coord+0x2>
 862:	90 91 25 01 	lds	r25, 0x0125	; 0x800125 <coord+0x3>
 866:	0e 94 e1 04 	call	0x9c2	; 0x9c2 <__addsf3>
 86a:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <coord>
 86e:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <coord+0x1>
 872:	80 93 24 01 	sts	0x0124, r24	; 0x800124 <coord+0x2>
 876:	90 93 25 01 	sts	0x0125, r25	; 0x800125 <coord+0x3>
			if(coord > targetCoord){
 87a:	20 91 26 01 	lds	r18, 0x0126	; 0x800126 <targetCoord>
 87e:	30 91 27 01 	lds	r19, 0x0127	; 0x800127 <targetCoord+0x1>
 882:	40 91 28 01 	lds	r20, 0x0128	; 0x800128 <targetCoord+0x2>
 886:	50 91 29 01 	lds	r21, 0x0129	; 0x800129 <targetCoord+0x3>
 88a:	0e 94 ac 06 	call	0xd58	; 0xd58 <__gesf2>
 88e:	18 16       	cp	r1, r24
 890:	0c f0       	brlt	.+2      	; 0x894 <_Z14mathematicallyv+0x92>
 892:	4f c0       	rjmp	.+158    	; 0x932 <__stack+0x33>
				acceleration = 0;
 894:	10 92 1a 01 	sts	0x011A, r1	; 0x80011a <acceleration>
 898:	10 92 1b 01 	sts	0x011B, r1	; 0x80011b <acceleration+0x1>
 89c:	10 92 1c 01 	sts	0x011C, r1	; 0x80011c <acceleration+0x2>
 8a0:	10 92 1d 01 	sts	0x011D, r1	; 0x80011d <acceleration+0x3>
 8a4:	46 c0       	rjmp	.+140    	; 0x932 <__stack+0x33>
			}

		}else if(speed <0){
 8a6:	20 e0       	ldi	r18, 0x00	; 0
 8a8:	30 e0       	ldi	r19, 0x00	; 0
 8aa:	a9 01       	movw	r20, r18
 8ac:	c7 01       	movw	r24, r14
 8ae:	b6 01       	movw	r22, r12
 8b0:	0e 94 4d 05 	call	0xa9a	; 0xa9a <__cmpsf2>
 8b4:	88 23       	and	r24, r24
 8b6:	5c f5       	brge	.+86     	; 0x90e <__stack+0xf>
			coord--;
 8b8:	20 e0       	ldi	r18, 0x00	; 0
 8ba:	30 e0       	ldi	r19, 0x00	; 0
 8bc:	40 e8       	ldi	r20, 0x80	; 128
 8be:	5f e3       	ldi	r21, 0x3F	; 63
 8c0:	60 91 22 01 	lds	r22, 0x0122	; 0x800122 <coord>
 8c4:	70 91 23 01 	lds	r23, 0x0123	; 0x800123 <coord+0x1>
 8c8:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <coord+0x2>
 8cc:	90 91 25 01 	lds	r25, 0x0125	; 0x800125 <coord+0x3>
 8d0:	0e 94 e0 04 	call	0x9c0	; 0x9c0 <__subsf3>
 8d4:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <coord>
 8d8:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <coord+0x1>
 8dc:	80 93 24 01 	sts	0x0124, r24	; 0x800124 <coord+0x2>
 8e0:	90 93 25 01 	sts	0x0125, r25	; 0x800125 <coord+0x3>
			if(coord < targetCoord){
 8e4:	20 91 26 01 	lds	r18, 0x0126	; 0x800126 <targetCoord>
 8e8:	30 91 27 01 	lds	r19, 0x0127	; 0x800127 <targetCoord+0x1>
 8ec:	40 91 28 01 	lds	r20, 0x0128	; 0x800128 <targetCoord+0x2>
 8f0:	50 91 29 01 	lds	r21, 0x0129	; 0x800129 <targetCoord+0x3>
 8f4:	0e 94 4d 05 	call	0xa9a	; 0xa9a <__cmpsf2>
 8f8:	88 23       	and	r24, r24
 8fa:	dc f4       	brge	.+54     	; 0x932 <__stack+0x33>
				acceleration = 0;
 8fc:	10 92 1a 01 	sts	0x011A, r1	; 0x80011a <acceleration>
 900:	10 92 1b 01 	sts	0x011B, r1	; 0x80011b <acceleration+0x1>
 904:	10 92 1c 01 	sts	0x011C, r1	; 0x80011c <acceleration+0x2>
 908:	10 92 1d 01 	sts	0x011D, r1	; 0x80011d <acceleration+0x3>
 90c:	12 c0       	rjmp	.+36     	; 0x932 <__stack+0x33>
			}
		}else{
			stopTimer(0);
 90e:	80 e0       	ldi	r24, 0x00	; 0
 910:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <_Z9stopTimerh>
			uart_dec(coord);
 914:	60 91 22 01 	lds	r22, 0x0122	; 0x800122 <coord>
 918:	70 91 23 01 	lds	r23, 0x0123	; 0x800123 <coord+0x1>
 91c:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <coord+0x2>
 920:	90 91 25 01 	lds	r25, 0x0125	; 0x800125 <coord+0x3>
 924:	0e 94 c4 05 	call	0xb88	; 0xb88 <__fixsfsi>
 928:	0e 94 75 00 	call	0xea	; 0xea <_Z8uart_decl>
			uart_putchar('\n');
 92c:	8a e0       	ldi	r24, 0x0A	; 10
 92e:	0e 94 64 00 	call	0xc8	; 0xc8 <_Z12uart_putcharh>
		}
		//pr();
		fizmath = true;
 932:	81 e0       	ldi	r24, 0x01	; 1
 934:	80 93 19 01 	sts	0x0119, r24	; 0x800119 <fizmath>
};
 938:	ff 90       	pop	r15
 93a:	ef 90       	pop	r14
 93c:	df 90       	pop	r13
 93e:	cf 90       	pop	r12
 940:	08 95       	ret

00000942 <__vector_14>:
ISR(TIMER0_COMPA_vect){
 942:	1f 92       	push	r1
 944:	0f 92       	push	r0
 946:	0f b6       	in	r0, 0x3f	; 63
 948:	0f 92       	push	r0
 94a:	11 24       	eor	r1, r1
 94c:	2f 93       	push	r18
 94e:	3f 93       	push	r19
 950:	4f 93       	push	r20
 952:	5f 93       	push	r21
 954:	6f 93       	push	r22
 956:	7f 93       	push	r23
 958:	8f 93       	push	r24
 95a:	9f 93       	push	r25
 95c:	af 93       	push	r26
 95e:	bf 93       	push	r27
 960:	ef 93       	push	r30
 962:	ff 93       	push	r31
	if(fizmath){
 964:	80 91 19 01 	lds	r24, 0x0119	; 0x800119 <fizmath>
 968:	88 23       	and	r24, r24
 96a:	19 f0       	breq	.+6      	; 0x972 <__vector_14+0x30>
		physically();
 96c:	0e 94 97 02 	call	0x52e	; 0x52e <_Z10physicallyv>
 970:	02 c0       	rjmp	.+4      	; 0x976 <__vector_14+0x34>
	}else{
		mathematically();
 972:	0e 94 01 04 	call	0x802	; 0x802 <_Z14mathematicallyv>
	}
}
 976:	ff 91       	pop	r31
 978:	ef 91       	pop	r30
 97a:	bf 91       	pop	r27
 97c:	af 91       	pop	r26
 97e:	9f 91       	pop	r25
 980:	8f 91       	pop	r24
 982:	7f 91       	pop	r23
 984:	6f 91       	pop	r22
 986:	5f 91       	pop	r21
 988:	4f 91       	pop	r20
 98a:	3f 91       	pop	r19
 98c:	2f 91       	pop	r18
 98e:	0f 90       	pop	r0
 990:	0f be       	out	0x3f, r0	; 63
 992:	0f 90       	pop	r0
 994:	1f 90       	pop	r1
 996:	18 95       	reti

00000998 <__vector_11>:
ISR(TIMER1_COMPA_vect){
 998:	1f 92       	push	r1
 99a:	0f 92       	push	r0
 99c:	0f b6       	in	r0, 0x3f	; 63
 99e:	0f 92       	push	r0
 9a0:	11 24       	eor	r1, r1
	
}
 9a2:	0f 90       	pop	r0
 9a4:	0f be       	out	0x3f, r0	; 63
 9a6:	0f 90       	pop	r0
 9a8:	1f 90       	pop	r1
 9aa:	18 95       	reti

000009ac <__vector_7>:
ISR(TIMER2_COMPA_vect){
 9ac:	1f 92       	push	r1
 9ae:	0f 92       	push	r0
 9b0:	0f b6       	in	r0, 0x3f	; 63
 9b2:	0f 92       	push	r0
 9b4:	11 24       	eor	r1, r1
	
}
 9b6:	0f 90       	pop	r0
 9b8:	0f be       	out	0x3f, r0	; 63
 9ba:	0f 90       	pop	r0
 9bc:	1f 90       	pop	r1
 9be:	18 95       	reti

000009c0 <__subsf3>:
 9c0:	50 58       	subi	r21, 0x80	; 128

000009c2 <__addsf3>:
 9c2:	bb 27       	eor	r27, r27
 9c4:	aa 27       	eor	r26, r26
 9c6:	0e 94 f8 04 	call	0x9f0	; 0x9f0 <__addsf3x>
 9ca:	0c 94 72 06 	jmp	0xce4	; 0xce4 <__fp_round>
 9ce:	0e 94 64 06 	call	0xcc8	; 0xcc8 <__fp_pscA>
 9d2:	38 f0       	brcs	.+14     	; 0x9e2 <__addsf3+0x20>
 9d4:	0e 94 6b 06 	call	0xcd6	; 0xcd6 <__fp_pscB>
 9d8:	20 f0       	brcs	.+8      	; 0x9e2 <__addsf3+0x20>
 9da:	39 f4       	brne	.+14     	; 0x9ea <__addsf3+0x28>
 9dc:	9f 3f       	cpi	r25, 0xFF	; 255
 9de:	19 f4       	brne	.+6      	; 0x9e6 <__addsf3+0x24>
 9e0:	26 f4       	brtc	.+8      	; 0x9ea <__addsf3+0x28>
 9e2:	0c 94 61 06 	jmp	0xcc2	; 0xcc2 <__fp_nan>
 9e6:	0e f4       	brtc	.+2      	; 0x9ea <__addsf3+0x28>
 9e8:	e0 95       	com	r30
 9ea:	e7 fb       	bst	r30, 7
 9ec:	0c 94 5b 06 	jmp	0xcb6	; 0xcb6 <__fp_inf>

000009f0 <__addsf3x>:
 9f0:	e9 2f       	mov	r30, r25
 9f2:	0e 94 83 06 	call	0xd06	; 0xd06 <__fp_split3>
 9f6:	58 f3       	brcs	.-42     	; 0x9ce <__addsf3+0xc>
 9f8:	ba 17       	cp	r27, r26
 9fa:	62 07       	cpc	r22, r18
 9fc:	73 07       	cpc	r23, r19
 9fe:	84 07       	cpc	r24, r20
 a00:	95 07       	cpc	r25, r21
 a02:	20 f0       	brcs	.+8      	; 0xa0c <__addsf3x+0x1c>
 a04:	79 f4       	brne	.+30     	; 0xa24 <__addsf3x+0x34>
 a06:	a6 f5       	brtc	.+104    	; 0xa70 <__addsf3x+0x80>
 a08:	0c 94 a5 06 	jmp	0xd4a	; 0xd4a <__fp_zero>
 a0c:	0e f4       	brtc	.+2      	; 0xa10 <__addsf3x+0x20>
 a0e:	e0 95       	com	r30
 a10:	0b 2e       	mov	r0, r27
 a12:	ba 2f       	mov	r27, r26
 a14:	a0 2d       	mov	r26, r0
 a16:	0b 01       	movw	r0, r22
 a18:	b9 01       	movw	r22, r18
 a1a:	90 01       	movw	r18, r0
 a1c:	0c 01       	movw	r0, r24
 a1e:	ca 01       	movw	r24, r20
 a20:	a0 01       	movw	r20, r0
 a22:	11 24       	eor	r1, r1
 a24:	ff 27       	eor	r31, r31
 a26:	59 1b       	sub	r21, r25
 a28:	99 f0       	breq	.+38     	; 0xa50 <__addsf3x+0x60>
 a2a:	59 3f       	cpi	r21, 0xF9	; 249
 a2c:	50 f4       	brcc	.+20     	; 0xa42 <__addsf3x+0x52>
 a2e:	50 3e       	cpi	r21, 0xE0	; 224
 a30:	68 f1       	brcs	.+90     	; 0xa8c <__addsf3x+0x9c>
 a32:	1a 16       	cp	r1, r26
 a34:	f0 40       	sbci	r31, 0x00	; 0
 a36:	a2 2f       	mov	r26, r18
 a38:	23 2f       	mov	r18, r19
 a3a:	34 2f       	mov	r19, r20
 a3c:	44 27       	eor	r20, r20
 a3e:	58 5f       	subi	r21, 0xF8	; 248
 a40:	f3 cf       	rjmp	.-26     	; 0xa28 <__addsf3x+0x38>
 a42:	46 95       	lsr	r20
 a44:	37 95       	ror	r19
 a46:	27 95       	ror	r18
 a48:	a7 95       	ror	r26
 a4a:	f0 40       	sbci	r31, 0x00	; 0
 a4c:	53 95       	inc	r21
 a4e:	c9 f7       	brne	.-14     	; 0xa42 <__addsf3x+0x52>
 a50:	7e f4       	brtc	.+30     	; 0xa70 <__addsf3x+0x80>
 a52:	1f 16       	cp	r1, r31
 a54:	ba 0b       	sbc	r27, r26
 a56:	62 0b       	sbc	r22, r18
 a58:	73 0b       	sbc	r23, r19
 a5a:	84 0b       	sbc	r24, r20
 a5c:	ba f0       	brmi	.+46     	; 0xa8c <__addsf3x+0x9c>
 a5e:	91 50       	subi	r25, 0x01	; 1
 a60:	a1 f0       	breq	.+40     	; 0xa8a <__addsf3x+0x9a>
 a62:	ff 0f       	add	r31, r31
 a64:	bb 1f       	adc	r27, r27
 a66:	66 1f       	adc	r22, r22
 a68:	77 1f       	adc	r23, r23
 a6a:	88 1f       	adc	r24, r24
 a6c:	c2 f7       	brpl	.-16     	; 0xa5e <__addsf3x+0x6e>
 a6e:	0e c0       	rjmp	.+28     	; 0xa8c <__addsf3x+0x9c>
 a70:	ba 0f       	add	r27, r26
 a72:	62 1f       	adc	r22, r18
 a74:	73 1f       	adc	r23, r19
 a76:	84 1f       	adc	r24, r20
 a78:	48 f4       	brcc	.+18     	; 0xa8c <__addsf3x+0x9c>
 a7a:	87 95       	ror	r24
 a7c:	77 95       	ror	r23
 a7e:	67 95       	ror	r22
 a80:	b7 95       	ror	r27
 a82:	f7 95       	ror	r31
 a84:	9e 3f       	cpi	r25, 0xFE	; 254
 a86:	08 f0       	brcs	.+2      	; 0xa8a <__addsf3x+0x9a>
 a88:	b0 cf       	rjmp	.-160    	; 0x9ea <__addsf3+0x28>
 a8a:	93 95       	inc	r25
 a8c:	88 0f       	add	r24, r24
 a8e:	08 f0       	brcs	.+2      	; 0xa92 <__addsf3x+0xa2>
 a90:	99 27       	eor	r25, r25
 a92:	ee 0f       	add	r30, r30
 a94:	97 95       	ror	r25
 a96:	87 95       	ror	r24
 a98:	08 95       	ret

00000a9a <__cmpsf2>:
 a9a:	0e 94 37 06 	call	0xc6e	; 0xc6e <__fp_cmp>
 a9e:	08 f4       	brcc	.+2      	; 0xaa2 <__cmpsf2+0x8>
 aa0:	81 e0       	ldi	r24, 0x01	; 1
 aa2:	08 95       	ret

00000aa4 <__divsf3>:
 aa4:	0e 94 66 05 	call	0xacc	; 0xacc <__divsf3x>
 aa8:	0c 94 72 06 	jmp	0xce4	; 0xce4 <__fp_round>
 aac:	0e 94 6b 06 	call	0xcd6	; 0xcd6 <__fp_pscB>
 ab0:	58 f0       	brcs	.+22     	; 0xac8 <__divsf3+0x24>
 ab2:	0e 94 64 06 	call	0xcc8	; 0xcc8 <__fp_pscA>
 ab6:	40 f0       	brcs	.+16     	; 0xac8 <__divsf3+0x24>
 ab8:	29 f4       	brne	.+10     	; 0xac4 <__divsf3+0x20>
 aba:	5f 3f       	cpi	r21, 0xFF	; 255
 abc:	29 f0       	breq	.+10     	; 0xac8 <__divsf3+0x24>
 abe:	0c 94 5b 06 	jmp	0xcb6	; 0xcb6 <__fp_inf>
 ac2:	51 11       	cpse	r21, r1
 ac4:	0c 94 a6 06 	jmp	0xd4c	; 0xd4c <__fp_szero>
 ac8:	0c 94 61 06 	jmp	0xcc2	; 0xcc2 <__fp_nan>

00000acc <__divsf3x>:
 acc:	0e 94 83 06 	call	0xd06	; 0xd06 <__fp_split3>
 ad0:	68 f3       	brcs	.-38     	; 0xaac <__divsf3+0x8>

00000ad2 <__divsf3_pse>:
 ad2:	99 23       	and	r25, r25
 ad4:	b1 f3       	breq	.-20     	; 0xac2 <__divsf3+0x1e>
 ad6:	55 23       	and	r21, r21
 ad8:	91 f3       	breq	.-28     	; 0xabe <__divsf3+0x1a>
 ada:	95 1b       	sub	r25, r21
 adc:	55 0b       	sbc	r21, r21
 ade:	bb 27       	eor	r27, r27
 ae0:	aa 27       	eor	r26, r26
 ae2:	62 17       	cp	r22, r18
 ae4:	73 07       	cpc	r23, r19
 ae6:	84 07       	cpc	r24, r20
 ae8:	38 f0       	brcs	.+14     	; 0xaf8 <__divsf3_pse+0x26>
 aea:	9f 5f       	subi	r25, 0xFF	; 255
 aec:	5f 4f       	sbci	r21, 0xFF	; 255
 aee:	22 0f       	add	r18, r18
 af0:	33 1f       	adc	r19, r19
 af2:	44 1f       	adc	r20, r20
 af4:	aa 1f       	adc	r26, r26
 af6:	a9 f3       	breq	.-22     	; 0xae2 <__divsf3_pse+0x10>
 af8:	35 d0       	rcall	.+106    	; 0xb64 <__divsf3_pse+0x92>
 afa:	0e 2e       	mov	r0, r30
 afc:	3a f0       	brmi	.+14     	; 0xb0c <__divsf3_pse+0x3a>
 afe:	e0 e8       	ldi	r30, 0x80	; 128
 b00:	32 d0       	rcall	.+100    	; 0xb66 <__divsf3_pse+0x94>
 b02:	91 50       	subi	r25, 0x01	; 1
 b04:	50 40       	sbci	r21, 0x00	; 0
 b06:	e6 95       	lsr	r30
 b08:	00 1c       	adc	r0, r0
 b0a:	ca f7       	brpl	.-14     	; 0xafe <__divsf3_pse+0x2c>
 b0c:	2b d0       	rcall	.+86     	; 0xb64 <__divsf3_pse+0x92>
 b0e:	fe 2f       	mov	r31, r30
 b10:	29 d0       	rcall	.+82     	; 0xb64 <__divsf3_pse+0x92>
 b12:	66 0f       	add	r22, r22
 b14:	77 1f       	adc	r23, r23
 b16:	88 1f       	adc	r24, r24
 b18:	bb 1f       	adc	r27, r27
 b1a:	26 17       	cp	r18, r22
 b1c:	37 07       	cpc	r19, r23
 b1e:	48 07       	cpc	r20, r24
 b20:	ab 07       	cpc	r26, r27
 b22:	b0 e8       	ldi	r27, 0x80	; 128
 b24:	09 f0       	breq	.+2      	; 0xb28 <__divsf3_pse+0x56>
 b26:	bb 0b       	sbc	r27, r27
 b28:	80 2d       	mov	r24, r0
 b2a:	bf 01       	movw	r22, r30
 b2c:	ff 27       	eor	r31, r31
 b2e:	93 58       	subi	r25, 0x83	; 131
 b30:	5f 4f       	sbci	r21, 0xFF	; 255
 b32:	3a f0       	brmi	.+14     	; 0xb42 <__divsf3_pse+0x70>
 b34:	9e 3f       	cpi	r25, 0xFE	; 254
 b36:	51 05       	cpc	r21, r1
 b38:	78 f0       	brcs	.+30     	; 0xb58 <__divsf3_pse+0x86>
 b3a:	0c 94 5b 06 	jmp	0xcb6	; 0xcb6 <__fp_inf>
 b3e:	0c 94 a6 06 	jmp	0xd4c	; 0xd4c <__fp_szero>
 b42:	5f 3f       	cpi	r21, 0xFF	; 255
 b44:	e4 f3       	brlt	.-8      	; 0xb3e <__divsf3_pse+0x6c>
 b46:	98 3e       	cpi	r25, 0xE8	; 232
 b48:	d4 f3       	brlt	.-12     	; 0xb3e <__divsf3_pse+0x6c>
 b4a:	86 95       	lsr	r24
 b4c:	77 95       	ror	r23
 b4e:	67 95       	ror	r22
 b50:	b7 95       	ror	r27
 b52:	f7 95       	ror	r31
 b54:	9f 5f       	subi	r25, 0xFF	; 255
 b56:	c9 f7       	brne	.-14     	; 0xb4a <__divsf3_pse+0x78>
 b58:	88 0f       	add	r24, r24
 b5a:	91 1d       	adc	r25, r1
 b5c:	96 95       	lsr	r25
 b5e:	87 95       	ror	r24
 b60:	97 f9       	bld	r25, 7
 b62:	08 95       	ret
 b64:	e1 e0       	ldi	r30, 0x01	; 1
 b66:	66 0f       	add	r22, r22
 b68:	77 1f       	adc	r23, r23
 b6a:	88 1f       	adc	r24, r24
 b6c:	bb 1f       	adc	r27, r27
 b6e:	62 17       	cp	r22, r18
 b70:	73 07       	cpc	r23, r19
 b72:	84 07       	cpc	r24, r20
 b74:	ba 07       	cpc	r27, r26
 b76:	20 f0       	brcs	.+8      	; 0xb80 <__divsf3_pse+0xae>
 b78:	62 1b       	sub	r22, r18
 b7a:	73 0b       	sbc	r23, r19
 b7c:	84 0b       	sbc	r24, r20
 b7e:	ba 0b       	sbc	r27, r26
 b80:	ee 1f       	adc	r30, r30
 b82:	88 f7       	brcc	.-30     	; 0xb66 <__divsf3_pse+0x94>
 b84:	e0 95       	com	r30
 b86:	08 95       	ret

00000b88 <__fixsfsi>:
 b88:	0e 94 cb 05 	call	0xb96	; 0xb96 <__fixunssfsi>
 b8c:	68 94       	set
 b8e:	b1 11       	cpse	r27, r1
 b90:	0c 94 a6 06 	jmp	0xd4c	; 0xd4c <__fp_szero>
 b94:	08 95       	ret

00000b96 <__fixunssfsi>:
 b96:	0e 94 8b 06 	call	0xd16	; 0xd16 <__fp_splitA>
 b9a:	88 f0       	brcs	.+34     	; 0xbbe <__fixunssfsi+0x28>
 b9c:	9f 57       	subi	r25, 0x7F	; 127
 b9e:	98 f0       	brcs	.+38     	; 0xbc6 <__fixunssfsi+0x30>
 ba0:	b9 2f       	mov	r27, r25
 ba2:	99 27       	eor	r25, r25
 ba4:	b7 51       	subi	r27, 0x17	; 23
 ba6:	b0 f0       	brcs	.+44     	; 0xbd4 <__fixunssfsi+0x3e>
 ba8:	e1 f0       	breq	.+56     	; 0xbe2 <__fixunssfsi+0x4c>
 baa:	66 0f       	add	r22, r22
 bac:	77 1f       	adc	r23, r23
 bae:	88 1f       	adc	r24, r24
 bb0:	99 1f       	adc	r25, r25
 bb2:	1a f0       	brmi	.+6      	; 0xbba <__fixunssfsi+0x24>
 bb4:	ba 95       	dec	r27
 bb6:	c9 f7       	brne	.-14     	; 0xbaa <__fixunssfsi+0x14>
 bb8:	14 c0       	rjmp	.+40     	; 0xbe2 <__fixunssfsi+0x4c>
 bba:	b1 30       	cpi	r27, 0x01	; 1
 bbc:	91 f0       	breq	.+36     	; 0xbe2 <__fixunssfsi+0x4c>
 bbe:	0e 94 a5 06 	call	0xd4a	; 0xd4a <__fp_zero>
 bc2:	b1 e0       	ldi	r27, 0x01	; 1
 bc4:	08 95       	ret
 bc6:	0c 94 a5 06 	jmp	0xd4a	; 0xd4a <__fp_zero>
 bca:	67 2f       	mov	r22, r23
 bcc:	78 2f       	mov	r23, r24
 bce:	88 27       	eor	r24, r24
 bd0:	b8 5f       	subi	r27, 0xF8	; 248
 bd2:	39 f0       	breq	.+14     	; 0xbe2 <__fixunssfsi+0x4c>
 bd4:	b9 3f       	cpi	r27, 0xF9	; 249
 bd6:	cc f3       	brlt	.-14     	; 0xbca <__fixunssfsi+0x34>
 bd8:	86 95       	lsr	r24
 bda:	77 95       	ror	r23
 bdc:	67 95       	ror	r22
 bde:	b3 95       	inc	r27
 be0:	d9 f7       	brne	.-10     	; 0xbd8 <__fixunssfsi+0x42>
 be2:	3e f4       	brtc	.+14     	; 0xbf2 <__fixunssfsi+0x5c>
 be4:	90 95       	com	r25
 be6:	80 95       	com	r24
 be8:	70 95       	com	r23
 bea:	61 95       	neg	r22
 bec:	7f 4f       	sbci	r23, 0xFF	; 255
 bee:	8f 4f       	sbci	r24, 0xFF	; 255
 bf0:	9f 4f       	sbci	r25, 0xFF	; 255
 bf2:	08 95       	ret

00000bf4 <__floatunsisf>:
 bf4:	e8 94       	clt
 bf6:	09 c0       	rjmp	.+18     	; 0xc0a <__floatsisf+0x12>

00000bf8 <__floatsisf>:
 bf8:	97 fb       	bst	r25, 7
 bfa:	3e f4       	brtc	.+14     	; 0xc0a <__floatsisf+0x12>
 bfc:	90 95       	com	r25
 bfe:	80 95       	com	r24
 c00:	70 95       	com	r23
 c02:	61 95       	neg	r22
 c04:	7f 4f       	sbci	r23, 0xFF	; 255
 c06:	8f 4f       	sbci	r24, 0xFF	; 255
 c08:	9f 4f       	sbci	r25, 0xFF	; 255
 c0a:	99 23       	and	r25, r25
 c0c:	a9 f0       	breq	.+42     	; 0xc38 <__floatsisf+0x40>
 c0e:	f9 2f       	mov	r31, r25
 c10:	96 e9       	ldi	r25, 0x96	; 150
 c12:	bb 27       	eor	r27, r27
 c14:	93 95       	inc	r25
 c16:	f6 95       	lsr	r31
 c18:	87 95       	ror	r24
 c1a:	77 95       	ror	r23
 c1c:	67 95       	ror	r22
 c1e:	b7 95       	ror	r27
 c20:	f1 11       	cpse	r31, r1
 c22:	f8 cf       	rjmp	.-16     	; 0xc14 <__floatsisf+0x1c>
 c24:	fa f4       	brpl	.+62     	; 0xc64 <__floatsisf+0x6c>
 c26:	bb 0f       	add	r27, r27
 c28:	11 f4       	brne	.+4      	; 0xc2e <__floatsisf+0x36>
 c2a:	60 ff       	sbrs	r22, 0
 c2c:	1b c0       	rjmp	.+54     	; 0xc64 <__floatsisf+0x6c>
 c2e:	6f 5f       	subi	r22, 0xFF	; 255
 c30:	7f 4f       	sbci	r23, 0xFF	; 255
 c32:	8f 4f       	sbci	r24, 0xFF	; 255
 c34:	9f 4f       	sbci	r25, 0xFF	; 255
 c36:	16 c0       	rjmp	.+44     	; 0xc64 <__floatsisf+0x6c>
 c38:	88 23       	and	r24, r24
 c3a:	11 f0       	breq	.+4      	; 0xc40 <__floatsisf+0x48>
 c3c:	96 e9       	ldi	r25, 0x96	; 150
 c3e:	11 c0       	rjmp	.+34     	; 0xc62 <__floatsisf+0x6a>
 c40:	77 23       	and	r23, r23
 c42:	21 f0       	breq	.+8      	; 0xc4c <__floatsisf+0x54>
 c44:	9e e8       	ldi	r25, 0x8E	; 142
 c46:	87 2f       	mov	r24, r23
 c48:	76 2f       	mov	r23, r22
 c4a:	05 c0       	rjmp	.+10     	; 0xc56 <__floatsisf+0x5e>
 c4c:	66 23       	and	r22, r22
 c4e:	71 f0       	breq	.+28     	; 0xc6c <__floatsisf+0x74>
 c50:	96 e8       	ldi	r25, 0x86	; 134
 c52:	86 2f       	mov	r24, r22
 c54:	70 e0       	ldi	r23, 0x00	; 0
 c56:	60 e0       	ldi	r22, 0x00	; 0
 c58:	2a f0       	brmi	.+10     	; 0xc64 <__floatsisf+0x6c>
 c5a:	9a 95       	dec	r25
 c5c:	66 0f       	add	r22, r22
 c5e:	77 1f       	adc	r23, r23
 c60:	88 1f       	adc	r24, r24
 c62:	da f7       	brpl	.-10     	; 0xc5a <__floatsisf+0x62>
 c64:	88 0f       	add	r24, r24
 c66:	96 95       	lsr	r25
 c68:	87 95       	ror	r24
 c6a:	97 f9       	bld	r25, 7
 c6c:	08 95       	ret

00000c6e <__fp_cmp>:
 c6e:	99 0f       	add	r25, r25
 c70:	00 08       	sbc	r0, r0
 c72:	55 0f       	add	r21, r21
 c74:	aa 0b       	sbc	r26, r26
 c76:	e0 e8       	ldi	r30, 0x80	; 128
 c78:	fe ef       	ldi	r31, 0xFE	; 254
 c7a:	16 16       	cp	r1, r22
 c7c:	17 06       	cpc	r1, r23
 c7e:	e8 07       	cpc	r30, r24
 c80:	f9 07       	cpc	r31, r25
 c82:	c0 f0       	brcs	.+48     	; 0xcb4 <__fp_cmp+0x46>
 c84:	12 16       	cp	r1, r18
 c86:	13 06       	cpc	r1, r19
 c88:	e4 07       	cpc	r30, r20
 c8a:	f5 07       	cpc	r31, r21
 c8c:	98 f0       	brcs	.+38     	; 0xcb4 <__fp_cmp+0x46>
 c8e:	62 1b       	sub	r22, r18
 c90:	73 0b       	sbc	r23, r19
 c92:	84 0b       	sbc	r24, r20
 c94:	95 0b       	sbc	r25, r21
 c96:	39 f4       	brne	.+14     	; 0xca6 <__fp_cmp+0x38>
 c98:	0a 26       	eor	r0, r26
 c9a:	61 f0       	breq	.+24     	; 0xcb4 <__fp_cmp+0x46>
 c9c:	23 2b       	or	r18, r19
 c9e:	24 2b       	or	r18, r20
 ca0:	25 2b       	or	r18, r21
 ca2:	21 f4       	brne	.+8      	; 0xcac <__fp_cmp+0x3e>
 ca4:	08 95       	ret
 ca6:	0a 26       	eor	r0, r26
 ca8:	09 f4       	brne	.+2      	; 0xcac <__fp_cmp+0x3e>
 caa:	a1 40       	sbci	r26, 0x01	; 1
 cac:	a6 95       	lsr	r26
 cae:	8f ef       	ldi	r24, 0xFF	; 255
 cb0:	81 1d       	adc	r24, r1
 cb2:	81 1d       	adc	r24, r1
 cb4:	08 95       	ret

00000cb6 <__fp_inf>:
 cb6:	97 f9       	bld	r25, 7
 cb8:	9f 67       	ori	r25, 0x7F	; 127
 cba:	80 e8       	ldi	r24, 0x80	; 128
 cbc:	70 e0       	ldi	r23, 0x00	; 0
 cbe:	60 e0       	ldi	r22, 0x00	; 0
 cc0:	08 95       	ret

00000cc2 <__fp_nan>:
 cc2:	9f ef       	ldi	r25, 0xFF	; 255
 cc4:	80 ec       	ldi	r24, 0xC0	; 192
 cc6:	08 95       	ret

00000cc8 <__fp_pscA>:
 cc8:	00 24       	eor	r0, r0
 cca:	0a 94       	dec	r0
 ccc:	16 16       	cp	r1, r22
 cce:	17 06       	cpc	r1, r23
 cd0:	18 06       	cpc	r1, r24
 cd2:	09 06       	cpc	r0, r25
 cd4:	08 95       	ret

00000cd6 <__fp_pscB>:
 cd6:	00 24       	eor	r0, r0
 cd8:	0a 94       	dec	r0
 cda:	12 16       	cp	r1, r18
 cdc:	13 06       	cpc	r1, r19
 cde:	14 06       	cpc	r1, r20
 ce0:	05 06       	cpc	r0, r21
 ce2:	08 95       	ret

00000ce4 <__fp_round>:
 ce4:	09 2e       	mov	r0, r25
 ce6:	03 94       	inc	r0
 ce8:	00 0c       	add	r0, r0
 cea:	11 f4       	brne	.+4      	; 0xcf0 <__fp_round+0xc>
 cec:	88 23       	and	r24, r24
 cee:	52 f0       	brmi	.+20     	; 0xd04 <__fp_round+0x20>
 cf0:	bb 0f       	add	r27, r27
 cf2:	40 f4       	brcc	.+16     	; 0xd04 <__fp_round+0x20>
 cf4:	bf 2b       	or	r27, r31
 cf6:	11 f4       	brne	.+4      	; 0xcfc <__fp_round+0x18>
 cf8:	60 ff       	sbrs	r22, 0
 cfa:	04 c0       	rjmp	.+8      	; 0xd04 <__fp_round+0x20>
 cfc:	6f 5f       	subi	r22, 0xFF	; 255
 cfe:	7f 4f       	sbci	r23, 0xFF	; 255
 d00:	8f 4f       	sbci	r24, 0xFF	; 255
 d02:	9f 4f       	sbci	r25, 0xFF	; 255
 d04:	08 95       	ret

00000d06 <__fp_split3>:
 d06:	57 fd       	sbrc	r21, 7
 d08:	90 58       	subi	r25, 0x80	; 128
 d0a:	44 0f       	add	r20, r20
 d0c:	55 1f       	adc	r21, r21
 d0e:	59 f0       	breq	.+22     	; 0xd26 <__fp_splitA+0x10>
 d10:	5f 3f       	cpi	r21, 0xFF	; 255
 d12:	71 f0       	breq	.+28     	; 0xd30 <__fp_splitA+0x1a>
 d14:	47 95       	ror	r20

00000d16 <__fp_splitA>:
 d16:	88 0f       	add	r24, r24
 d18:	97 fb       	bst	r25, 7
 d1a:	99 1f       	adc	r25, r25
 d1c:	61 f0       	breq	.+24     	; 0xd36 <__fp_splitA+0x20>
 d1e:	9f 3f       	cpi	r25, 0xFF	; 255
 d20:	79 f0       	breq	.+30     	; 0xd40 <__fp_splitA+0x2a>
 d22:	87 95       	ror	r24
 d24:	08 95       	ret
 d26:	12 16       	cp	r1, r18
 d28:	13 06       	cpc	r1, r19
 d2a:	14 06       	cpc	r1, r20
 d2c:	55 1f       	adc	r21, r21
 d2e:	f2 cf       	rjmp	.-28     	; 0xd14 <__fp_split3+0xe>
 d30:	46 95       	lsr	r20
 d32:	f1 df       	rcall	.-30     	; 0xd16 <__fp_splitA>
 d34:	08 c0       	rjmp	.+16     	; 0xd46 <__fp_splitA+0x30>
 d36:	16 16       	cp	r1, r22
 d38:	17 06       	cpc	r1, r23
 d3a:	18 06       	cpc	r1, r24
 d3c:	99 1f       	adc	r25, r25
 d3e:	f1 cf       	rjmp	.-30     	; 0xd22 <__fp_splitA+0xc>
 d40:	86 95       	lsr	r24
 d42:	71 05       	cpc	r23, r1
 d44:	61 05       	cpc	r22, r1
 d46:	08 94       	sec
 d48:	08 95       	ret

00000d4a <__fp_zero>:
 d4a:	e8 94       	clt

00000d4c <__fp_szero>:
 d4c:	bb 27       	eor	r27, r27
 d4e:	66 27       	eor	r22, r22
 d50:	77 27       	eor	r23, r23
 d52:	cb 01       	movw	r24, r22
 d54:	97 f9       	bld	r25, 7
 d56:	08 95       	ret

00000d58 <__gesf2>:
 d58:	0e 94 37 06 	call	0xc6e	; 0xc6e <__fp_cmp>
 d5c:	08 f4       	brcc	.+2      	; 0xd60 <__gesf2+0x8>
 d5e:	8f ef       	ldi	r24, 0xFF	; 255
 d60:	08 95       	ret

00000d62 <__mulsf3>:
 d62:	0e 94 c4 06 	call	0xd88	; 0xd88 <__mulsf3x>
 d66:	0c 94 72 06 	jmp	0xce4	; 0xce4 <__fp_round>
 d6a:	0e 94 64 06 	call	0xcc8	; 0xcc8 <__fp_pscA>
 d6e:	38 f0       	brcs	.+14     	; 0xd7e <__mulsf3+0x1c>
 d70:	0e 94 6b 06 	call	0xcd6	; 0xcd6 <__fp_pscB>
 d74:	20 f0       	brcs	.+8      	; 0xd7e <__mulsf3+0x1c>
 d76:	95 23       	and	r25, r21
 d78:	11 f0       	breq	.+4      	; 0xd7e <__mulsf3+0x1c>
 d7a:	0c 94 5b 06 	jmp	0xcb6	; 0xcb6 <__fp_inf>
 d7e:	0c 94 61 06 	jmp	0xcc2	; 0xcc2 <__fp_nan>
 d82:	11 24       	eor	r1, r1
 d84:	0c 94 a6 06 	jmp	0xd4c	; 0xd4c <__fp_szero>

00000d88 <__mulsf3x>:
 d88:	0e 94 83 06 	call	0xd06	; 0xd06 <__fp_split3>
 d8c:	70 f3       	brcs	.-36     	; 0xd6a <__mulsf3+0x8>

00000d8e <__mulsf3_pse>:
 d8e:	95 9f       	mul	r25, r21
 d90:	c1 f3       	breq	.-16     	; 0xd82 <__mulsf3+0x20>
 d92:	95 0f       	add	r25, r21
 d94:	50 e0       	ldi	r21, 0x00	; 0
 d96:	55 1f       	adc	r21, r21
 d98:	62 9f       	mul	r22, r18
 d9a:	f0 01       	movw	r30, r0
 d9c:	72 9f       	mul	r23, r18
 d9e:	bb 27       	eor	r27, r27
 da0:	f0 0d       	add	r31, r0
 da2:	b1 1d       	adc	r27, r1
 da4:	63 9f       	mul	r22, r19
 da6:	aa 27       	eor	r26, r26
 da8:	f0 0d       	add	r31, r0
 daa:	b1 1d       	adc	r27, r1
 dac:	aa 1f       	adc	r26, r26
 dae:	64 9f       	mul	r22, r20
 db0:	66 27       	eor	r22, r22
 db2:	b0 0d       	add	r27, r0
 db4:	a1 1d       	adc	r26, r1
 db6:	66 1f       	adc	r22, r22
 db8:	82 9f       	mul	r24, r18
 dba:	22 27       	eor	r18, r18
 dbc:	b0 0d       	add	r27, r0
 dbe:	a1 1d       	adc	r26, r1
 dc0:	62 1f       	adc	r22, r18
 dc2:	73 9f       	mul	r23, r19
 dc4:	b0 0d       	add	r27, r0
 dc6:	a1 1d       	adc	r26, r1
 dc8:	62 1f       	adc	r22, r18
 dca:	83 9f       	mul	r24, r19
 dcc:	a0 0d       	add	r26, r0
 dce:	61 1d       	adc	r22, r1
 dd0:	22 1f       	adc	r18, r18
 dd2:	74 9f       	mul	r23, r20
 dd4:	33 27       	eor	r19, r19
 dd6:	a0 0d       	add	r26, r0
 dd8:	61 1d       	adc	r22, r1
 dda:	23 1f       	adc	r18, r19
 ddc:	84 9f       	mul	r24, r20
 dde:	60 0d       	add	r22, r0
 de0:	21 1d       	adc	r18, r1
 de2:	82 2f       	mov	r24, r18
 de4:	76 2f       	mov	r23, r22
 de6:	6a 2f       	mov	r22, r26
 de8:	11 24       	eor	r1, r1
 dea:	9f 57       	subi	r25, 0x7F	; 127
 dec:	50 40       	sbci	r21, 0x00	; 0
 dee:	9a f0       	brmi	.+38     	; 0xe16 <__mulsf3_pse+0x88>
 df0:	f1 f0       	breq	.+60     	; 0xe2e <__mulsf3_pse+0xa0>
 df2:	88 23       	and	r24, r24
 df4:	4a f0       	brmi	.+18     	; 0xe08 <__mulsf3_pse+0x7a>
 df6:	ee 0f       	add	r30, r30
 df8:	ff 1f       	adc	r31, r31
 dfa:	bb 1f       	adc	r27, r27
 dfc:	66 1f       	adc	r22, r22
 dfe:	77 1f       	adc	r23, r23
 e00:	88 1f       	adc	r24, r24
 e02:	91 50       	subi	r25, 0x01	; 1
 e04:	50 40       	sbci	r21, 0x00	; 0
 e06:	a9 f7       	brne	.-22     	; 0xdf2 <__mulsf3_pse+0x64>
 e08:	9e 3f       	cpi	r25, 0xFE	; 254
 e0a:	51 05       	cpc	r21, r1
 e0c:	80 f0       	brcs	.+32     	; 0xe2e <__mulsf3_pse+0xa0>
 e0e:	0c 94 5b 06 	jmp	0xcb6	; 0xcb6 <__fp_inf>
 e12:	0c 94 a6 06 	jmp	0xd4c	; 0xd4c <__fp_szero>
 e16:	5f 3f       	cpi	r21, 0xFF	; 255
 e18:	e4 f3       	brlt	.-8      	; 0xe12 <__mulsf3_pse+0x84>
 e1a:	98 3e       	cpi	r25, 0xE8	; 232
 e1c:	d4 f3       	brlt	.-12     	; 0xe12 <__mulsf3_pse+0x84>
 e1e:	86 95       	lsr	r24
 e20:	77 95       	ror	r23
 e22:	67 95       	ror	r22
 e24:	b7 95       	ror	r27
 e26:	f7 95       	ror	r31
 e28:	e7 95       	ror	r30
 e2a:	9f 5f       	subi	r25, 0xFF	; 255
 e2c:	c1 f7       	brne	.-16     	; 0xe1e <__mulsf3_pse+0x90>
 e2e:	fe 2b       	or	r31, r30
 e30:	88 0f       	add	r24, r24
 e32:	91 1d       	adc	r25, r1
 e34:	96 95       	lsr	r25
 e36:	87 95       	ror	r24
 e38:	97 f9       	bld	r25, 7
 e3a:	08 95       	ret

00000e3c <__divmodsi4>:
 e3c:	05 2e       	mov	r0, r21
 e3e:	97 fb       	bst	r25, 7
 e40:	1e f4       	brtc	.+6      	; 0xe48 <__divmodsi4+0xc>
 e42:	00 94       	com	r0
 e44:	0e 94 35 07 	call	0xe6a	; 0xe6a <__negsi2>
 e48:	57 fd       	sbrc	r21, 7
 e4a:	07 d0       	rcall	.+14     	; 0xe5a <__divmodsi4_neg2>
 e4c:	0e 94 3d 07 	call	0xe7a	; 0xe7a <__udivmodsi4>
 e50:	07 fc       	sbrc	r0, 7
 e52:	03 d0       	rcall	.+6      	; 0xe5a <__divmodsi4_neg2>
 e54:	4e f4       	brtc	.+18     	; 0xe68 <__divmodsi4_exit>
 e56:	0c 94 35 07 	jmp	0xe6a	; 0xe6a <__negsi2>

00000e5a <__divmodsi4_neg2>:
 e5a:	50 95       	com	r21
 e5c:	40 95       	com	r20
 e5e:	30 95       	com	r19
 e60:	21 95       	neg	r18
 e62:	3f 4f       	sbci	r19, 0xFF	; 255
 e64:	4f 4f       	sbci	r20, 0xFF	; 255
 e66:	5f 4f       	sbci	r21, 0xFF	; 255

00000e68 <__divmodsi4_exit>:
 e68:	08 95       	ret

00000e6a <__negsi2>:
 e6a:	90 95       	com	r25
 e6c:	80 95       	com	r24
 e6e:	70 95       	com	r23
 e70:	61 95       	neg	r22
 e72:	7f 4f       	sbci	r23, 0xFF	; 255
 e74:	8f 4f       	sbci	r24, 0xFF	; 255
 e76:	9f 4f       	sbci	r25, 0xFF	; 255
 e78:	08 95       	ret

00000e7a <__udivmodsi4>:
 e7a:	a1 e2       	ldi	r26, 0x21	; 33
 e7c:	1a 2e       	mov	r1, r26
 e7e:	aa 1b       	sub	r26, r26
 e80:	bb 1b       	sub	r27, r27
 e82:	fd 01       	movw	r30, r26
 e84:	0d c0       	rjmp	.+26     	; 0xea0 <__udivmodsi4_ep>

00000e86 <__udivmodsi4_loop>:
 e86:	aa 1f       	adc	r26, r26
 e88:	bb 1f       	adc	r27, r27
 e8a:	ee 1f       	adc	r30, r30
 e8c:	ff 1f       	adc	r31, r31
 e8e:	a2 17       	cp	r26, r18
 e90:	b3 07       	cpc	r27, r19
 e92:	e4 07       	cpc	r30, r20
 e94:	f5 07       	cpc	r31, r21
 e96:	20 f0       	brcs	.+8      	; 0xea0 <__udivmodsi4_ep>
 e98:	a2 1b       	sub	r26, r18
 e9a:	b3 0b       	sbc	r27, r19
 e9c:	e4 0b       	sbc	r30, r20
 e9e:	f5 0b       	sbc	r31, r21

00000ea0 <__udivmodsi4_ep>:
 ea0:	66 1f       	adc	r22, r22
 ea2:	77 1f       	adc	r23, r23
 ea4:	88 1f       	adc	r24, r24
 ea6:	99 1f       	adc	r25, r25
 ea8:	1a 94       	dec	r1
 eaa:	69 f7       	brne	.-38     	; 0xe86 <__udivmodsi4_loop>
 eac:	60 95       	com	r22
 eae:	70 95       	com	r23
 eb0:	80 95       	com	r24
 eb2:	90 95       	com	r25
 eb4:	9b 01       	movw	r18, r22
 eb6:	ac 01       	movw	r20, r24
 eb8:	bd 01       	movw	r22, r26
 eba:	cf 01       	movw	r24, r30
 ebc:	08 95       	ret

00000ebe <_exit>:
 ebe:	f8 94       	cli

00000ec0 <__stop_program>:
 ec0:	ff cf       	rjmp	.-2      	; 0xec0 <__stop_program>
