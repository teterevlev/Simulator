
physics3c.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000021c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000001c8  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  0000021c  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000024c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000078  00000000  00000000  0000028c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000835  00000000  00000000  00000304  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000709  00000000  00000000  00000b39  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000043b  00000000  00000000  00001242  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000120  00000000  00000000  00001680  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000453  00000000  00000000  000017a0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000143  00000000  00000000  00001bf3  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000058  00000000  00000000  00001d36  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 c8 00 	jmp	0x190	; 0x190 <__vector_7>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 be 00 	jmp	0x17c	; 0x17c <__vector_11>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 99 00 	jmp	0x132	; 0x132 <__vector_14>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 da 00 	call	0x1b4	; 0x1b4 <main>
  78:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <_Z9uart_initv>:
	UDR0 = c;
}
uint8_t uart_getchar(){
	while ( !(UCSR0A & (1<<RXC0)) );
	return UDR0;
}
  80:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
  84:	87 e6       	ldi	r24, 0x67	; 103
  86:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
  8a:	e0 ec       	ldi	r30, 0xC0	; 192
  8c:	f0 e0       	ldi	r31, 0x00	; 0
  8e:	80 81       	ld	r24, Z
  90:	8d 7f       	andi	r24, 0xFD	; 253
  92:	80 83       	st	Z, r24
  94:	86 e0       	ldi	r24, 0x06	; 6
  96:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
  9a:	88 e1       	ldi	r24, 0x18	; 24
  9c:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
  a0:	08 95       	ret

000000a2 <_Z12uart_putcharh>:
  a2:	e0 ec       	ldi	r30, 0xC0	; 192
  a4:	f0 e0       	ldi	r31, 0x00	; 0
  a6:	90 81       	ld	r25, Z
  a8:	95 ff       	sbrs	r25, 5
  aa:	fd cf       	rjmp	.-6      	; 0xa6 <_Z12uart_putcharh+0x4>
  ac:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
  b0:	08 95       	ret

000000b2 <_Z9gpio_initv>:
void gpio_init(){
	TCCR0A=0x42;
  b2:	82 e4       	ldi	r24, 0x42	; 66
  b4:	84 bd       	out	0x24, r24	; 36
	TCCR0B=0x04;
  b6:	94 e0       	ldi	r25, 0x04	; 4
  b8:	95 bd       	out	0x25, r25	; 37
	TCNT0=0x00;
  ba:	16 bc       	out	0x26, r1	; 38
	OCR0A=255;
  bc:	9f ef       	ldi	r25, 0xFF	; 255
  be:	97 bd       	out	0x27, r25	; 39
	OCR0B=0x00;
  c0:	18 bc       	out	0x28, r1	; 40
		
		
	TCCR1A=0x40;
  c2:	90 e4       	ldi	r25, 0x40	; 64
  c4:	90 93 80 00 	sts	0x0080, r25	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
	TCCR1B=0x09;
  c8:	99 e0       	ldi	r25, 0x09	; 9
  ca:	90 93 81 00 	sts	0x0081, r25	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
	TCNT1H=0x00;
  ce:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
	TCNT1L=0x00;
  d2:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
	ICR1H=0x00;
  d6:	10 92 87 00 	sts	0x0087, r1	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
	ICR1L=0x00;
  da:	10 92 86 00 	sts	0x0086, r1	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
	OCR1AH=0x00;
  de:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
	OCR1AL=110;
  e2:	9e e6       	ldi	r25, 0x6E	; 110
  e4:	90 93 88 00 	sts	0x0088, r25	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
	OCR1BH=0x00;
  e8:	10 92 8b 00 	sts	0x008B, r1	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
	OCR1BL=0x00;
  ec:	10 92 8a 00 	sts	0x008A, r1	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
		
		
	ASSR=0x00;
  f0:	10 92 b6 00 	sts	0x00B6, r1	; 0x8000b6 <__TEXT_REGION_LENGTH__+0x7e00b6>
	TCCR2A=0x42;
  f4:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
	TCCR2B=0x01;
  f8:	81 e0       	ldi	r24, 0x01	; 1
  fa:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7e00b1>
	TCNT2=0x00;
  fe:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7e00b2>
	OCR2A=120;
 102:	88 e7       	ldi	r24, 0x78	; 120
 104:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
	OCR2B=0x00;
 108:	10 92 b4 00 	sts	0x00B4, r1	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7e00b4>
		
	TIMSK0=0x02;
 10c:	82 e0       	ldi	r24, 0x02	; 2
 10e:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7e006e>
	TIMSK1=0x02;
 112:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
	TIMSK2=0x02;
 116:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__TEXT_REGION_LENGTH__+0x7e0070>
	ACSR=0x80;
 11a:	80 e8       	ldi	r24, 0x80	; 128
 11c:	80 bf       	out	0x30, r24	; 48
 11e:	08 95       	ret

00000120 <_Z14interrupt_initv>:
}
void interrupt_init(){
	PORTB=0x00;
 120:	15 b8       	out	0x05, r1	; 5
	DDRB=0b11010;
 122:	8a e1       	ldi	r24, 0x1A	; 26
 124:	84 b9       	out	0x04, r24	; 4

	PORTC=0x00;
 126:	18 b8       	out	0x08, r1	; 8
	DDRC=0x00;
 128:	17 b8       	out	0x07, r1	; 7

	PORTD=0x00;
 12a:	1b b8       	out	0x0b, r1	; 11
	DDRD=0x40;
 12c:	80 e4       	ldi	r24, 0x40	; 64
 12e:	8a b9       	out	0x0a, r24	; 10
 130:	08 95       	ret

00000132 <__vector_14>:
#include <avr/interrupt.h>
#include "functions.h"

// TCCR0B=0x05: 64 - 8200 us
// TCCR0B=0x05: 256 - 32600 us
ISR(TIMER0_COMPA_vect){
 132:	1f 92       	push	r1
 134:	0f 92       	push	r0
 136:	0f b6       	in	r0, 0x3f	; 63
 138:	0f 92       	push	r0
 13a:	11 24       	eor	r1, r1
 13c:	2f 93       	push	r18
 13e:	3f 93       	push	r19
 140:	4f 93       	push	r20
 142:	5f 93       	push	r21
 144:	6f 93       	push	r22
 146:	7f 93       	push	r23
 148:	8f 93       	push	r24
 14a:	9f 93       	push	r25
 14c:	af 93       	push	r26
 14e:	bf 93       	push	r27
 150:	ef 93       	push	r30
 152:	ff 93       	push	r31
	uart_putchar(48);
 154:	80 e3       	ldi	r24, 0x30	; 48
 156:	0e 94 51 00 	call	0xa2	; 0xa2 <_Z12uart_putcharh>
}
 15a:	ff 91       	pop	r31
 15c:	ef 91       	pop	r30
 15e:	bf 91       	pop	r27
 160:	af 91       	pop	r26
 162:	9f 91       	pop	r25
 164:	8f 91       	pop	r24
 166:	7f 91       	pop	r23
 168:	6f 91       	pop	r22
 16a:	5f 91       	pop	r21
 16c:	4f 91       	pop	r20
 16e:	3f 91       	pop	r19
 170:	2f 91       	pop	r18
 172:	0f 90       	pop	r0
 174:	0f be       	out	0x3f, r0	; 63
 176:	0f 90       	pop	r0
 178:	1f 90       	pop	r1
 17a:	18 95       	reti

0000017c <__vector_11>:
ISR(TIMER1_COMPA_vect){
 17c:	1f 92       	push	r1
 17e:	0f 92       	push	r0
 180:	0f b6       	in	r0, 0x3f	; 63
 182:	0f 92       	push	r0
 184:	11 24       	eor	r1, r1
	
}
 186:	0f 90       	pop	r0
 188:	0f be       	out	0x3f, r0	; 63
 18a:	0f 90       	pop	r0
 18c:	1f 90       	pop	r1
 18e:	18 95       	reti

00000190 <__vector_7>:
ISR(TIMER2_COMPA_vect){
 190:	1f 92       	push	r1
 192:	0f 92       	push	r0
 194:	0f b6       	in	r0, 0x3f	; 63
 196:	0f 92       	push	r0
 198:	11 24       	eor	r1, r1
 19a:	8f 93       	push	r24
 19c:	9f 93       	push	r25
		PORTB ^= 0b10000;
 19e:	95 b1       	in	r25, 0x05	; 5
 1a0:	80 e1       	ldi	r24, 0x10	; 16
 1a2:	89 27       	eor	r24, r25
 1a4:	85 b9       	out	0x05, r24	; 5
	
}
 1a6:	9f 91       	pop	r25
 1a8:	8f 91       	pop	r24
 1aa:	0f 90       	pop	r0
 1ac:	0f be       	out	0x3f, r0	; 63
 1ae:	0f 90       	pop	r0
 1b0:	1f 90       	pop	r1
 1b2:	18 95       	reti

000001b4 <main>:

int main(void)
{
	gpio_init();
 1b4:	0e 94 59 00 	call	0xb2	; 0xb2 <_Z9gpio_initv>
	interrupt_init();
 1b8:	0e 94 90 00 	call	0x120	; 0x120 <_Z14interrupt_initv>
	uart_init();
 1bc:	0e 94 40 00 	call	0x80	; 0x80 <_Z9uart_initv>
	asm("sei");
 1c0:	78 94       	sei
ISR(TIMER2_COMPA_vect){
		PORTB ^= 0b10000;
	
}

int main(void)
 1c2:	ff cf       	rjmp	.-2      	; 0x1c2 <main+0xe>

000001c4 <_exit>:
 1c4:	f8 94       	cli

000001c6 <__stop_program>:
 1c6:	ff cf       	rjmp	.-2      	; 0x1c6 <__stop_program>
